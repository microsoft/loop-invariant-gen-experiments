These tasks were generated by Martin Spiessl
from information in the tool repository of zilu,
a tool for invariant generation throug selective sampling,
which is described in the following publication:

Li, J., Sun, J., Li, L., Le, Q. L., & Lin, S. W. (2017, October).
Automatic loop-invariant generation anc refinement through selective sampling.
In 2017 32nd IEEE/ACM International Conference on Automated Software Engineering (ASE) (pp. 782-792). IEEE.

These tasks represent the 53 benchmarks
that are listed in table 1 in this publication.

The original repository for zilu was at (according to the paper):
https://github.com/lijiaying/zilu

It seems this repository was deleted or set to private.
The original repository was published unter GPL-2.0,
a copy I made can be found at:
https://github.com/MartinSpiessl/zilu

So I supply these tasks unter GPL-2.0 as well.

The paper mentions that the tasks were collected
from various papers/sources, one of them being SV-COMP.
It is not easy to identify which tasks were taken from which source,
and the authors state many of the SV-COMP tasks had to be excluded anyway
because they were too complicated/ out of scope.
Also the tasks are written down in a simplified format
in the zilu repository in special files with the extension "cfg".

I did the translation into SV-COMP compliant tasks
myself with a small python script.
Due to these 2 transformations,
I do not believe that the tasks contain
any copyrightable material anymore
from the publications they were originally taken from.
Also the tasks are very simple,
so they will probably fall below the
threshold of originality anyway.

Tasks ending in _abstracted.* contain versions of these tasks
where a loop has been overaproximated using simple abstraction
techniques, as described in:
"A Unifying Approach for Control-Flow-Based Loop Abstraction" (SEFM 2022)
https://doi.org/10.1007/978-3-031-17108-6_1
Contributed by: Martin Spiessl
