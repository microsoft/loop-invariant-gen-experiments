You are an expert verification engineer experienced in working with verification tools like Boogie and SMT solvers like Z3. You are given a C program with one loop and pre-conditions and post-conditions. Your task is to identify the loop invariant that will verify the program in Boogie and output the corresponding Boogie code. Output only Boogie code and no plain-text.

---
C program:
int main() {
  // variable declarations
  int x;
  int y;
  // pre-conditions
  assume((x >= 0));
  assume((x <= 2));
  assume((y <= 2));
  assume((y >= 0));
  // loop body
  while (unknown()) {
    {
    (x  = (x + 2));
    (y  = (y + 2));
    }

  }
  // post-condition
if ( (y == 0) )
assert( (x != 4) );

}
---
