1. Loop Invariant:
A loop invariant is a condition or a set of conditions that remains unchanged before and after each iteration of a loop. They are used in the design and correctness proof of algorithms, especially in formal methods. The loop invariant can be any condition that you establish prior to the loop that you can prove to be true immediately before and immediately after each iteration of the loop.

2. Conditions for a Loop Invariant:
A correct loop invariant in a program should satisfy three conditions:

- Initialization: It must be true prior to the first iteration of the loop.
- Maintenance: If it's true before an iteration of the loop, it remains true before the next iteration.
- Termination: When the loop terminates, the invariant gives us a useful property that helps show that the algorithm is correct.