{# templates/CoT4.txt #}

Amazing! Frama-C is a software verification tool that given a C program and a specification, attempts to prove that the program satisfies the specification. 
Input to the Frama-C tool is given in the form of ACSL (ANSI/ISO C Specification Langage) annotations. ACSL is a behavioral specification language for C programs. 
Frama-C allows a user to specify loop invariants, pre-conditions, post-conditions, and other such properties of the program.

For the C code in consideration, please output the loop invariants in ACSL format. Every loop invariant in ACSL starts with the words "loop invariant".
Write the loop invariants as a sequence of "loop invariant" annotations in the ACSL syntax used by Frama C. Some examples of valid loop invariants in ACSL format are given below:

Loop invariants:
```
loop invariant 0 <= i <= n;
loop invariant a == x + y * 2;
```

If there are any conjunctions in a loop invariant, separate the conjuncts into multiple loop invariants. 
For example, if the loop invariant is 
```
a == x + y * 2 && b == x - y * 2
```
then output two loop invariants: 
```
a == x + y * 2 
b == x - y * 2
```
Do not output the entire program. Output all the invariants in one block of code using the ``` tags.

Keep in mind:
1. The loop invariant is a predicate that is true before loop entry, during loop body execution and after loop exit.
