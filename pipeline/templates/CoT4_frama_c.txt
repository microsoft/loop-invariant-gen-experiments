{# templates/CoT4.txt #}

Amazing! Frama-C is a software verification tool that given a C program and a specification, attempts to prove that the program satisfies the specification. Input to the Frama-C is given in ACSL (ANSI/ISO C Specification Langage) which is a behavioral specification language for C programs. 
Frama-C allows a user to specify loop invariants, pre-conditions, post-conditions, and other such properties of the program. 

For the given C code, please generate the loop invariants in ACSL format. Every annotation is a comment block with an '@' symbol immediately after the comment begins. 
Please use a new line for every loop invariant. Please output only one block of code using the ``` tags.
An example with valid annotations in ACSL format is given below.

Code:
```
/*@
  requires \valid(a+(0..n-1));

  assigns  a[0..n-1];

  ensures \forall integer i; 0 <= i < n ==> a[i] == 0;
*/
void set_to_0(int* a, size_t n){
  size_t i;

  /*@
    loop invariant 0 <= i <= n;
    loop invariant \forall integer j; 0 <= j < i ==> a[j] == 0;
  */
  for(i = 0; i < n; ++i)
    a[i] = 0;
}
```

Keep in mind:
1. The loop invariant is a predicate that is true before loop entry, during loop body execution and after loop exit.