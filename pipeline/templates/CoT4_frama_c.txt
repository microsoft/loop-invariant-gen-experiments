{# templates/CoT4.txt #}

Amazing! Frama-C is a software verification tool that given a C program and a specification, attempts to prove that the program satisfies the specification. Input to the Frama-C is given in ACSL (ANSI/ISO C Specification Langage) which is a behavioral specification language for C programs. 
Frama-C allows a user to specify loop invariants, pre-conditions, post-conditions, and other such properties of the program. 

For the given C code, please generate the loop invariants in ACSL format. Every invariant starts with the words "loop invariant". 
Please use a new line for every loop invariant. Please output only one block of code using the ``` tags.
Some examples of valid loop invariants in ACSL format are given below.

Loop invariants:
```
loop invariant 0 <= i <= n;
loop invariant \forall integer j; 0 <= j < i ==> a[j] == 0;
```

Keep in mind:
1. The loop invariant is a predicate that is true before loop entry, during loop body execution and after loop exit.
2. If there are any conjunctions in a loop invariant, separate the conjuncts into multiple loop invariants.