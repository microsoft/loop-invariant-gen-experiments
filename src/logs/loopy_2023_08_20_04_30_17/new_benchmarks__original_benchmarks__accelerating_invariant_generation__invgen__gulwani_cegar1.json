{
    "logs": {
        "file": "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/invgen/gulwani_cegar1.c",
        "benchmark_code": "#define assume(e) if(!(e)) return;\n\nint __BLAST_NONDET;\nvoid main() {\n  int x,y;\n\n  assume(0 <= x);  assume(x <= 2);\n  assume(0 <= y);  assume(y <= 2);\n  while( __BLAST_NONDET ) {\n\tx+=2;\n\ty+=2;\n  }\n  if( y >= 0 ) \n    if( y <= 0 ) \n      if( 4 <= x ) \n\t{;//@ assert( x < 4 );\n}\n}",
        "completions": [],
        "llm_conversation": "This was a ground truth experiment.",
        "invariants": [
            "loop invariant \\true;"
        ],
        "code_with_combined_invariants": "#define assume(e) if(!(e)) return;\n\nint __BLAST_NONDET;\nvoid main() {\n  int x,y;\n\n  assume(0 <= x);  assume(x <= 2);\n  assume(0 <= y);  assume(y <= 2);\n  /*@\nloop invariant \\true;\n*/\nwhile( __BLAST_NONDET ) {\n\tx+=2;\n\ty+=2;\n  }\n  if( y >= 0 ) \n    if( y <= 0 ) \n      if( 4 <= x ) \n\t{;//@ assert( x < 4 );\n}\n}",
        "checker_output": false,
        "checker_message": "Invariant \\true on line 10: Valid\nPost-condition x < 4 on line 19: Unknown\n",
        "code_after_combine_and_prune": "#define assume(e) if(!(e)) return;\n\nint __BLAST_NONDET;\nvoid main() {\n  int x,y;\n\n  assume(0 <= x);  assume(x <= 2);\n  assume(0 <= y);  assume(y <= 2);\n  /*@\nloop invariant \\true;\n*/\nwhile( __BLAST_NONDET ) {\n\tx+=2;\n\ty+=2;\n  }\n  if( y >= 0 ) \n    if( y <= 0 ) \n      if( 4 <= x ) \n\t{;//@ assert( x < 4 );\n}\n}",
        "checker_output_after_combine_and_prune": false,
        "checker_message_after_combine_and_prune": "Invariant \\true on line 10: Valid\nPost-condition x < 4 on line 19: Unknown\n"
    },
    "stats": {
        "success": [
            7,
            27,
            29
        ],
        "failure": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            28,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56
        ],
        "skipped": [],
        "total": 57,
        "success_rate": 0.05263157894736842
    }
}