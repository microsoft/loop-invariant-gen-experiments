{
    "logs": {
        "file": "../data/benchmarks/code2inv/37.c",
        "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > 40) )\n{;\n//@ assert( (c == 40) );\n}\n\n}",
        "success": true,
        "repair_tries": [],
        "candidates": [
            "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c <= 40;\nloop invariant i2: (unknown() && c != 40) ==> c < 40;\nloop invariant i3: (!unknown() && c == 40) ==> c > 0;\nloop invariant i4: 0 <= c <= 41;\nloop invariant i5: (c == 40) ==> (unknown() == 0);\nloop invariant i6: unknown() ==> c != 40;\nloop invariant i7: \\forall integer x; unknown() ==> c == x ==> (x == 40 || 0 <= x <= 40);\nloop invariant i8: unknown() ==> (c != 40);\nloop invariant i9: !unknown() ==> (c == 40 || c == 41);\nloop invariant i10: (unknown() ==> (c != 40) ==> (c == \\at(c, Pre) + 1));\nloop invariant i11: (unknown() ==> (c == 40) ==> (c == 1));\nloop invariant i12: c == 40 ==> unknown() == 0 || unknown() == 1;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > 40) )\n{;\n//@ assert( (c == 40) );\n}\n\n}",
            "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c <= 41;\nloop invariant i2: (c == 40) ==> (unknown() == 0);\nloop invariant i3: 0 <= c <= 40;\nloop invariant i4: (unknown() ==> (c == 40)) || (!unknown() ==> (c != 40));\nloop invariant i5: c >= 0;\nloop invariant i6: c <= 40;\nloop invariant i7: unknown() ==> (c != 40);\nloop invariant i8: !unknown() ==> (c == 40 || c == 41);\nloop invariant i9: unknown() ==> (c == 40 || c < 40);\nloop invariant i10: !unknown() ==> (c == 1 || c > 1);\nloop invariant i11: (c < 0 || c > 40) ==> (c == 40);\nloop invariant i12: !(c < 0) && !(c > 40) ==> (c == 40);\nloop invariant i13: \\forall integer x; unknown() ==> c == x ==> (x == 40 || 0 <= x <= 40);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > 40) )\n{;\n//@ assert( (c == 40) );\n}\n\n}"
        ]
    },
    "stats": {
        "gen_success": [
            "../data/benchmarks/code2inv/1.c",
            "../data/benchmarks/code2inv/2.c",
            "../data/benchmarks/code2inv/3.c",
            "../data/benchmarks/code2inv/4.c",
            "../data/benchmarks/code2inv/5.c",
            "../data/benchmarks/code2inv/6.c",
            "../data/benchmarks/code2inv/7.c",
            "../data/benchmarks/code2inv/8.c",
            "../data/benchmarks/code2inv/9.c",
            "../data/benchmarks/code2inv/10.c",
            "../data/benchmarks/code2inv/11.c",
            "../data/benchmarks/code2inv/12.c",
            "../data/benchmarks/code2inv/13.c",
            "../data/benchmarks/code2inv/14.c",
            "../data/benchmarks/code2inv/16.c",
            "../data/benchmarks/code2inv/18.c",
            "../data/benchmarks/code2inv/19.c",
            "../data/benchmarks/code2inv/20.c",
            "../data/benchmarks/code2inv/21.c",
            "../data/benchmarks/code2inv/22.c",
            "../data/benchmarks/code2inv/23.c",
            "../data/benchmarks/code2inv/25.c",
            "../data/benchmarks/code2inv/29.c",
            "../data/benchmarks/code2inv/30.c",
            "../data/benchmarks/code2inv/34.c",
            "../data/benchmarks/code2inv/35.c",
            "../data/benchmarks/code2inv/36.c",
            "../data/benchmarks/code2inv/37.c"
        ],
        "repair_success": [
            "../data/benchmarks/code2inv/15.c"
        ],
        "repair_failure": [
            "../data/benchmarks/code2inv/17.c",
            "../data/benchmarks/code2inv/24.c",
            "../data/benchmarks/code2inv/26.c",
            "../data/benchmarks/code2inv/27.c",
            "../data/benchmarks/code2inv/28.c",
            "../data/benchmarks/code2inv/31.c",
            "../data/benchmarks/code2inv/32.c",
            "../data/benchmarks/code2inv/33.c"
        ],
        "gen_skipped": [],
        "repair_skipped": [],
        "total": 9,
        "gen_success_count": 24,
        "repair_success_count": 1,
        "repair_failure_count": 8,
        "gen_skipped_count": 0,
        "repair_skipped_count": 0
    }
}