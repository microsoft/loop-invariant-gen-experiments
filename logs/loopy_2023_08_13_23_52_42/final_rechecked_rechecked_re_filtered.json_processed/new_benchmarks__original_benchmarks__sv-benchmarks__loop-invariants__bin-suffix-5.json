{
    "file": "../new_benchmarks/original_benchmarks/sv-benchmarks/loop-invariants/bin-suffix-5.c",
    "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nextern void abort(void);\nextern void __assert_fail(const char *, const char *, unsigned int, const char *) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));\n\nint main(void) {\n  unsigned int x = 5;\n  while (unknown_int()) {\n    x += 8;\n  }\n  {;//@ assert((x & 5) == 5);\n}\n  return 0;\n}",
    "pass_at_k": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
    ],
    "pass_at_k_prune": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
    ],
    "checking_exceptions": [],
    "pruning_exceptions": []
}