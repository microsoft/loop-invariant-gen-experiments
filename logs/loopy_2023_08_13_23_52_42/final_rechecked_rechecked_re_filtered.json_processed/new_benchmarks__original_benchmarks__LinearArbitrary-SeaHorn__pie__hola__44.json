{
    "file": "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/pie/hola/44.c",
    "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nextern int unknown1();\n\nint main()\n{\n  int k = unknown1();\n  int flag = unknown1();\n  int i=0;\n  int j=0;\n  int n = unknown1();\n\n  if (flag == 1){\n     n=1;\n  } else {\n     n=2;\n  }\n\n  i=0;\n\n  while ( i <= k){\n    i++;\n    j= j +n;\n  }\n  if(flag == 1)\n      {;//@ assert(j == i);\n}\n\t\n}\n",
    "pass_at_k": [
        0.2,
        0.4,
        0.6,
        0.6,
        0.6,
        0.6,
        0.7,
        0.7,
        0.9,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0
    ],
    "pass_at_k_prune": [
        0.2,
        0.7,
        0.8,
        0.9,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0
    ],
    "checking_exceptions": [],
    "pruning_exceptions": []
}