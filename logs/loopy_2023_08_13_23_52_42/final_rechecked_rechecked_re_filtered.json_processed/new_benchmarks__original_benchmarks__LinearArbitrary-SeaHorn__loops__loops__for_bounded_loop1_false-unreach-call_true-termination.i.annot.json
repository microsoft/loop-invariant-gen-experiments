{
    "file": "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/loops/loops/for_bounded_loop1_false-unreach-call_true-termination.i.annot.c",
    "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main(){\n  int  i=0,  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  for(i=0; i<n; i++)\n  {\n    x = x-y;\n    {;//@ assert(x==0);\n}\n    y = unknown_int();\nassume(y!=0);\n    x = x+y;\n    {;//@ assert(x!=0);\n}\n  }\n  {;//@ assert(x==0);\n}\n}",
    "pass_at_k": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
    ],
    "pass_at_k_prune": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
    ],
    "checking_exceptions": [],
    "pruning_exceptions": []
}