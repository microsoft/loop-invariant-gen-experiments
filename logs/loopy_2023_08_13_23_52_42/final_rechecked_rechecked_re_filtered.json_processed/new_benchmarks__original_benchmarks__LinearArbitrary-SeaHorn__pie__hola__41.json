{
    "file": "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/pie/hola/41.c",
    "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nextern int unknown1();\n\nint main() {\n   int n = unknown1();\n   int flag = unknown1();\n\n   if(n>=0){\n   int k = 1;\n   if(flag) {\n\tk = unknown1();\n\tif(k>=0) ; else return 0;\n   }\n   int i = 0, j = 0;\n   while(i <= n) {\n     i++;\n     j+=i;\n   }\n   int z = k + i + j;\n   {;//@ assert(z > 2*n);\n}\n   }\n   return 0;\n}\n",
    "pass_at_k": [
        0.0,
        0.2,
        0.2,
        0.2,
        0.2,
        0.3,
        0.3,
        0.3,
        0.6,
        0.9,
        0.9,
        1.0,
        1.0,
        1.0,
        1.0
    ],
    "pass_at_k_prune": [
        0.0,
        0.2,
        0.2,
        0.5,
        0.7,
        0.8,
        0.9,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0
    ],
    "checking_exceptions": [],
    "pruning_exceptions": []
}