{
    "file": "../new_benchmarks/original_benchmarks/sv-benchmarks/loop-zilu/benchmark53_polynomial.c",
    "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x*y>=0)) return 0;\n  while (unknown_bool()) {\n    if(x==0) {if (y>0) x++;\n    else x--;} if(x>0) y++;\n    else x--;\n  }\n  {;//@ assert(x*y>=0);\n}\n  return 0;\n}",
    "pass_at_k": [
        0.6,
        0.7,
        0.9,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0
    ],
    "pass_at_k_prune": [
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0
    ],
    "checking_exceptions": [],
    "pruning_exceptions": []
}