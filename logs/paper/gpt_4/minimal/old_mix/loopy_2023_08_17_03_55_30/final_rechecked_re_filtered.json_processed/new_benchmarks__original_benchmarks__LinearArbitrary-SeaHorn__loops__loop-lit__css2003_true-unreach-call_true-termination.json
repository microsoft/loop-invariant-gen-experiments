{
    "file": "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
    "benchmark_code": "#define assume(e) if(!(e)) return 0;\n#define LARGE_INT 1000000\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main() {\n    int i,j,k;\n    i = 1;\n    j = 1;\n    k = unknown_int();\n    if (!(0 <= k && k <= 1)) return 0;\n    while (i < LARGE_INT) {\n\ti = i + 1;\n\tj = j + k;\n\tk = k - 1;\n\t{;//@ assert(1 <= i + k && i + k <= 2 && i >= 1);\n}\n    }\n    return 0;\n}",
    "pass_at_k": [
        0.0,
        0.0,
        0.1,
        0.1,
        0.3,
        0.4,
        0.5,
        0.5,
        0.5,
        0.5,
        0.6,
        0.8,
        0.8,
        1.0,
        1.0
    ],
    "pass_at_k_prune": [
        0.4,
        0.6,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0
    ],
    "checking_exceptions": [],
    "pruning_exceptions": []
}