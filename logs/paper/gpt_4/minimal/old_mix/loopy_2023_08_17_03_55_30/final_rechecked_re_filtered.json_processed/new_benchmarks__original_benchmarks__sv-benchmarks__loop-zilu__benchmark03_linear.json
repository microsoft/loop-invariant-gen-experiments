{
    "file": "../new_benchmarks/original_benchmarks/sv-benchmarks/loop-zilu/benchmark03_linear.c",
    "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  int i = unknown_int();\n  int j = unknown_int();\n  \n  _Bool flag = unknown_bool();\n  x = 0; y = 0;\n  if (!(i==0 && j==0)) return 0;\n  while (unknown_bool()) {\n    x++;\n    y++;\n    i+=x;\n    j+=y;\n    if (flag) j+=1;\n  }\n  {;//@ assert(j>=i);\n}\n  return 0;\n}",
    "pass_at_k": [
        0.1,
        0.1,
        0.2,
        0.2,
        0.4,
        0.5,
        0.8,
        0.9,
        0.9,
        0.9,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0
    ],
    "pass_at_k_prune": [
        0.1,
        0.3,
        0.5,
        0.8,
        0.9,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0
    ],
    "checking_exceptions": [],
    "pruning_exceptions": []
}