{
    "logs": {
        "file": "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/invgen/bind_expands_vars2.c",
        "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int cp1_off, n1, n2, mc_i;\n  int MAXDATA;\n  if (MAXDATA > 0 ); else goto END;\n\n  if ((n1 <= MAXDATA * 2)); else goto END;\n\n  if ((cp1_off <= n1)); else goto END;\n\n  if ((n2 <= MAXDATA*2 - n1)); else goto END;\n\n  for (mc_i = 0; mc_i < n2; mc_i++) {\n    \n    {;//@ assert(cp1_off+mc_i < MAXDATA * 2);\n}\n    \n  }\n\n END:  return 0;\n}",
        "success": true,
        "repair_tries": [],
        "candidates": [
            "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int cp1_off, n1, n2, mc_i;\n  int MAXDATA;\n  if (MAXDATA > 0 ); else goto END;\n\n  if ((n1 <= MAXDATA * 2)); else goto END;\n\n  if ((cp1_off <= n1)); else goto END;\n\n  if ((n2 <= MAXDATA*2 - n1)); else goto END;\n\n  /*@\nloop invariant i1: 0 <= mc_i;\nloop invariant i2: mc_i <= n2;\nloop invariant i3: n2 <= MAXDATA * 2 - n1;\nloop invariant i4: cp1_off + mc_i <= MAXDATA * 2;\nloop invariant i5: cp1_off <= n1;\nloop invariant i6: n1 <= MAXDATA * 2;\nloop invariant i7: MAXDATA > 0;\nloop invariant i8: (mc_i == 0) ==> (cp1_off < MAXDATA * 2);\nloop invariant i9: (mc_i > 0) ==> (cp1_off + mc_i < MAXDATA * 2);\nloop invariant i10: 0 <= cp1_off + mc_i;\nloop invariant i11: 0 <= mc_i <= n2;\nloop invariant i12: cp1_off + mc_i <= n1 + n2;\nloop invariant i13: cp1_off + mc_i < MAXDATA * 2;\n*/\nfor (mc_i = 0; mc_i < n2; mc_i++) {\n    \n    {;//@ assert(cp1_off+mc_i < MAXDATA * 2);\n}\n    \n  }\n\n END:  return 0;\n}",
            "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int cp1_off, n1, n2, mc_i;\n  int MAXDATA;\n  if (MAXDATA > 0 ); else goto END;\n\n  if ((n1 <= MAXDATA * 2)); else goto END;\n\n  if ((cp1_off <= n1)); else goto END;\n\n  if ((n2 <= MAXDATA*2 - n1)); else goto END;\n\n  /*@\nloop invariant i1: 0 <= mc_i <= n2;\nloop invariant i2: cp1_off + mc_i < MAXDATA * 2;\nloop invariant i3: cp1_off + mc_i <= MAXDATA * 2;\nloop invariant i4: 0 <= mc_i;\nloop invariant i5: mc_i <= n2;\nloop invariant i6: n2 <= MAXDATA * 2 - n1;\nloop invariant i7: cp1_off <= n1;\nloop invariant i8: n1 <= MAXDATA * 2;\nloop invariant i9: 0 <= cp1_off + mc_i;\nloop invariant i10: cp1_off + mc_i <= n1 + n2;\n*/\nfor (mc_i = 0; mc_i < n2; mc_i++) {\n    \n    {;//@ assert(cp1_off+mc_i < MAXDATA * 2);\n}\n    \n  }\n\n END:  return 0;\n}"
        ]
    },
    "stats": {
        "gen_success": [
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/05.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/07.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/19.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/37.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/39.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/gulv.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/gulv_simp.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/pldi082_unbounded.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/substring1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/xy10.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/const_safe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/multivar_safe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/phases_safe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/simple_safe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/simple_safe2.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/simple_safe3.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/simple_safe4.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/underapprox_safe2.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/underapprox_unsafe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/barbr.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/barbrprime.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/bk-nat.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/bkley.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/efm.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/ex1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/lifnat.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/lifnatprime.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/lifo.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/seesaw.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/substring1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/swim.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/swim1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/invgen/bind_expands_vars2.c"
        ],
        "repair_success": [],
        "repair_failure": [
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/35.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/f2.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/const_unsafe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/diamond_safe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/diamond_safe2.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/diamond_unsafe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/diamond_unsafe2.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/multivar_unsafe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/overflow_safe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/overflow_unsafe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/phases_unsafe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/simple_unsafe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/simple_unsafe2.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/simple_unsafe3.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/simple_unsafe4.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/underapprox_safe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/underapprox_unsafe2.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/cars.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/fig2.c"
        ],
        "gen_skipped": [],
        "repair_skipped": [
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/20.c"
        ],
        "total": 19,
        "gen_success_count": 25,
        "repair_success_count": 0,
        "repair_failure_count": 19,
        "gen_skipped_count": 0,
        "repair_skipped_count": 1
    }
}