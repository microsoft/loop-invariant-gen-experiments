{
    "logs": {
        "file": "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/efm.c",
        "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint X1;\n\tint X2;\n\tint X3;\n\tint X4;\n\tint X5;\n\tint X6;\n\n\tif (! (X1>=1)) return 0;\n\tif (! (X2==0)) return 0;\n\tif (! (X3==0)) return 0;\n\tif (! (X4==1)) return 0;\n\tif (! (X5==0)) return 0;\n\tif (! (X6==0)) return 0;\n\n\twhile(unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (X1 >= 1)) return 0;\n\t\t\tif (! (X4 >= 1)) return 0;\n\t\t\tX1=X1-1;\n\t\t\tX4=X4-1;\n\t\t\tX2=X2+1;\n\t\t\tX5=X5+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (! (X2 >= 1)) return 0;\n\t\t\t\tif (! (X6 >= 1)) return 0;\n\t\t\t\tX2=X2-1;\n\t\t\t\tX3=X3+1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (X4 >= 1)) return 0;\n\t\t\t\t\tif (! (X3 >= 1)) return 0;\n\t\t\t\t\tX3=X3-1;\n\t\t\t\t\tX2=X2+1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! (X3>=1)) return 0;\n\t\t\t\t\t\tX3=X3-1;\n\t\t\t\t\t\tX1=X1+1;\n\t\t\t\t\t\tX6=X6+X5;\n\t\t\t\t\t\tX5=0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! (X2 >= 1)) return 0;\n\t\t\t\t\t\tX2 = X2 - 1;\n\t\t\t\t\t\tX1 = X1 + 1;\n\t\t\t\t\t\tX4 = X4 + X6;\n\t\t\t\t\t\tX6 = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t{;//@ assert(X4 + X5 + X6 -1 >= 0);\n} \n\t{;//@ assert(X4 + X5 + X6 -1 <= 0);\n} \n\t{;//@ assert(X4 + X5 <= 1);\n}\n\t{;//@ assert(X5  >= 0);\n}\n\t{;//@ assert(X4  >= 0);\n}\n\t{;//@ assert(X3  >= 0);\n}\n\t{;//@ assert(X2  >= 0);\n}\n\t{;//@ assert(X1 + X5 >= 1);\n}\n\t{;//@ assert(X1 + X2 >= X4 + X5);\n}\n\t{;//@ assert(X1 + X2 + X3 >= 1);\n}\n\n}\n",
        "success": true,
        "repair_tries": [],
        "candidates": [
            "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint X1;\n\tint X2;\n\tint X3;\n\tint X4;\n\tint X5;\n\tint X6;\n\n\tif (! (X1>=1)) return 0;\n\tif (! (X2==0)) return 0;\n\tif (! (X3==0)) return 0;\n\tif (! (X4==1)) return 0;\n\tif (! (X5==0)) return 0;\n\tif (! (X6==0)) return 0;\n\n\t/*@\nloop invariant i1: X1 >= 0;\nloop invariant i2: X2 >= 0;\nloop invariant i3: X3 >= 0;\nloop invariant i4: X4 >= 0;\nloop invariant i5: X5 >= 0;\nloop invariant i6: X6 >= 0;\nloop invariant i7: X1 + X5 >= 1;\nloop invariant i8: X1 + X2 >= X4 + X5;\nloop invariant i9: X1 + X2 + X3 >= 1;\nloop invariant i10: X4 + X5 + X6 - 1 >= 0 ==> X4 + X5 + X6 - 1 <= 0;\nloop invariant i11: X4 + X5 <= 1;\nloop invariant i12: X1 >= 1 ==> X1 >= 1;\nloop invariant i13: X4 >= 1 ==> X4 >= 1;\nloop invariant i14: X2 >= 1 ==> X2 >= 1;\nloop invariant i15: X6 >= 1 ==> X6 >= 1;\nloop invariant i16: X3 >= 1 ==> X3 >= 1;\nloop invariant i17: X1 >= 1 ==> X4 >= 1;\nloop invariant i18: X4 + X5 + X6 - 1 >= 0;\nloop invariant i19: X4 + X5 + X6 - 1 <= 0;\nloop invariant i20: X1 >= 1;\nloop invariant i21: X4 + X5 + X6 - 1 >= 0 ==> X4 + X5 <= 1;\n*/\nwhile(unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (X1 >= 1)) return 0;\n\t\t\tif (! (X4 >= 1)) return 0;\n\t\t\tX1=X1-1;\n\t\t\tX4=X4-1;\n\t\t\tX2=X2+1;\n\t\t\tX5=X5+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (! (X2 >= 1)) return 0;\n\t\t\t\tif (! (X6 >= 1)) return 0;\n\t\t\t\tX2=X2-1;\n\t\t\t\tX3=X3+1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (X4 >= 1)) return 0;\n\t\t\t\t\tif (! (X3 >= 1)) return 0;\n\t\t\t\t\tX3=X3-1;\n\t\t\t\t\tX2=X2+1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! (X3>=1)) return 0;\n\t\t\t\t\t\tX3=X3-1;\n\t\t\t\t\t\tX1=X1+1;\n\t\t\t\t\t\tX6=X6+X5;\n\t\t\t\t\t\tX5=0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! (X2 >= 1)) return 0;\n\t\t\t\t\t\tX2 = X2 - 1;\n\t\t\t\t\t\tX1 = X1 + 1;\n\t\t\t\t\t\tX4 = X4 + X6;\n\t\t\t\t\t\tX6 = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t{;//@ assert(X4 + X5 + X6 -1 >= 0);\n} \n\t{;//@ assert(X4 + X5 + X6 -1 <= 0);\n} \n\t{;//@ assert(X4 + X5 <= 1);\n}\n\t{;//@ assert(X5  >= 0);\n}\n\t{;//@ assert(X4  >= 0);\n}\n\t{;//@ assert(X3  >= 0);\n}\n\t{;//@ assert(X2  >= 0);\n}\n\t{;//@ assert(X1 + X5 >= 1);\n}\n\t{;//@ assert(X1 + X2 >= X4 + X5);\n}\n\t{;//@ assert(X1 + X2 + X3 >= 1);\n}\n\n}\n",
            "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint X1;\n\tint X2;\n\tint X3;\n\tint X4;\n\tint X5;\n\tint X6;\n\n\tif (! (X1>=1)) return 0;\n\tif (! (X2==0)) return 0;\n\tif (! (X3==0)) return 0;\n\tif (! (X4==1)) return 0;\n\tif (! (X5==0)) return 0;\n\tif (! (X6==0)) return 0;\n\n\t/*@\nloop invariant i1: X1 >= 0;\nloop invariant i2: X2 >= 0;\nloop invariant i3: X3 >= 0;\nloop invariant i4: X4 >= 0;\nloop invariant i5: X5 >= 0;\nloop invariant i6: X6 >= 0;\nloop invariant i7: X1 + X5 >= 1;\nloop invariant i8: X1 + X2 >= X4 + X5;\nloop invariant i9: X1 + X2 + X3 >= 1;\nloop invariant i10: X4 + X5 + X6 - 1 >= 0;\nloop invariant i11: X4 + X5 + X6 - 1 <= 0;\nloop invariant i12: X4 + X5 <= 1;\nloop invariant i13: X4 + X5 + X6 - 1 >= 0 ==> X4 + X5 + X6 - 1 <= 0;\nloop invariant i14: X1 >= 1;\nloop invariant i15: X4 + X5 + X6 - 1 >= 0 ==> X4 + X5 <= 1;\nloop invariant i16: X1 >= 1 ==> X1 >= 1;\nloop invariant i17: X4 >= 1 ==> X4 >= 1;\nloop invariant i18: X2 >= 1 ==> X2 >= 1;\nloop invariant i19: X6 >= 1 ==> X6 >= 1;\nloop invariant i20: X3 >= 1 ==> X3 >= 1;\n*/\nwhile(unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (X1 >= 1)) return 0;\n\t\t\tif (! (X4 >= 1)) return 0;\n\t\t\tX1=X1-1;\n\t\t\tX4=X4-1;\n\t\t\tX2=X2+1;\n\t\t\tX5=X5+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (! (X2 >= 1)) return 0;\n\t\t\t\tif (! (X6 >= 1)) return 0;\n\t\t\t\tX2=X2-1;\n\t\t\t\tX3=X3+1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (X4 >= 1)) return 0;\n\t\t\t\t\tif (! (X3 >= 1)) return 0;\n\t\t\t\t\tX3=X3-1;\n\t\t\t\t\tX2=X2+1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! (X3>=1)) return 0;\n\t\t\t\t\t\tX3=X3-1;\n\t\t\t\t\t\tX1=X1+1;\n\t\t\t\t\t\tX6=X6+X5;\n\t\t\t\t\t\tX5=0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! (X2 >= 1)) return 0;\n\t\t\t\t\t\tX2 = X2 - 1;\n\t\t\t\t\t\tX1 = X1 + 1;\n\t\t\t\t\t\tX4 = X4 + X6;\n\t\t\t\t\t\tX6 = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t{;//@ assert(X4 + X5 + X6 -1 >= 0);\n} \n\t{;//@ assert(X4 + X5 + X6 -1 <= 0);\n} \n\t{;//@ assert(X4 + X5 <= 1);\n}\n\t{;//@ assert(X5  >= 0);\n}\n\t{;//@ assert(X4  >= 0);\n}\n\t{;//@ assert(X3  >= 0);\n}\n\t{;//@ assert(X2  >= 0);\n}\n\t{;//@ assert(X1 + X5 >= 1);\n}\n\t{;//@ assert(X1 + X2 >= X4 + X5);\n}\n\t{;//@ assert(X1 + X2 + X3 >= 1);\n}\n\n}\n"
        ]
    },
    "stats": {
        "gen_success": [
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/05.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/07.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/19.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/37.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/39.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/gulv.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/gulv_simp.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/pldi082_unbounded.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/substring1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/xy10.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/const_safe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/multivar_safe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/phases_safe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/simple_safe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/simple_safe2.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/simple_safe3.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/simple_safe4.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/underapprox_safe2.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/underapprox_unsafe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/barbr.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/barbrprime.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/bk-nat.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/bkley.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/efm.c"
        ],
        "repair_success": [],
        "repair_failure": [
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/35.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/f2.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/const_unsafe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/diamond_safe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/diamond_safe2.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/diamond_unsafe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/diamond_unsafe2.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/multivar_unsafe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/overflow_safe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/overflow_unsafe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/phases_unsafe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/simple_unsafe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/simple_unsafe2.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/simple_unsafe3.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/simple_unsafe4.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/underapprox_safe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/underapprox_unsafe2.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/cars.c"
        ],
        "gen_skipped": [],
        "repair_skipped": [
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/20.c"
        ],
        "total": 18,
        "gen_success_count": 23,
        "repair_success_count": 0,
        "repair_failure_count": 18,
        "gen_skipped_count": 0,
        "repair_skipped_count": 1
    }
}