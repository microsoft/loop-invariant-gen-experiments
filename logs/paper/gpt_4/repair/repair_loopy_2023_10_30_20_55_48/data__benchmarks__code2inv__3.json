{
    "logs": {
        "file": "../data/benchmarks/code2inv/3.c",
        "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    while(x < 5) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n}",
        "success": true,
        "repair_tries": [],
        "candidates": [
            "#define assume(e) if(!(e)) return 0;\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\nloop invariant i1: 0 <= x <= 5;\nloop invariant i2: \\forall integer i; 0 <= i < x ==> z <= y;\nloop invariant i3: y <= z;\nloop invariant i4: (x > 0) ==> (z >= y);\nloop invariant i5: x < 5 ==> z <= y;\nloop invariant i6: x >= 1 ==> z <= y;\nloop invariant i7: \\forall integer k; 0 <= k < x ==> z <= y;\nloop invariant i8: x <= 5 ==> (z <= y) || (z > y);\nloop invariant i9: z >= y;\n*/\nwhile(x < 5) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n}",
            "#define assume(e) if(!(e)) return 0;\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\nloop invariant i1: 0 <= x <= 5;\nloop invariant i2: (x > 0) ==> (z >= y);\nloop invariant i3: x <= 5 ==> (z <= y) || (z > y);\nloop invariant i4: \\forall integer k; 0 <= k < x ==> z <= y;\nloop invariant i5: y <= z;\nloop invariant i6: (x == 0) ==> (z == \\at(z, Pre));\nloop invariant i7: (x > 0) ==> (y <= \\at(z, Pre));\nloop invariant i8: x == 0 ==> y == \\at(y, Pre);\nloop invariant i9: x > 0 ==> y >= \\min(z, \\at(y, Pre));\nloop invariant i10: \\forall integer k; 0 <= k < x ==> (y <= \\at(y, LoopEntry) && z <= \\at(z, LoopEntry));\nloop invariant i11: z >= y;\n*/\nwhile(x < 5) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n}"
        ]
    },
    "stats": {
        "gen_success": [
            "../data/benchmarks/code2inv/1.c",
            "../data/benchmarks/code2inv/2.c",
            "../data/benchmarks/code2inv/3.c"
        ],
        "repair_success": [],
        "repair_failure": [],
        "gen_skipped": [],
        "repair_skipped": [],
        "total": 0
    }
}