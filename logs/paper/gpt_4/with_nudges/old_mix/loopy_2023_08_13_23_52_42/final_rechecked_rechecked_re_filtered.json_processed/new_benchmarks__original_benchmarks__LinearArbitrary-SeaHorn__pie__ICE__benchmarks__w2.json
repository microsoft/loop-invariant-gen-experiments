{
    "file": "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
    "benchmark_code": "#define assume(e) if(!(e)) return;\nextern int unknown(void);\nextern int unknown_int(void);\n\nvoid main() {\n\n\tint n = unknown_int();\n\tif (n <= 0)\n\t\treturn;\n\n\tint x = 0;\n\tint input = unknown_int();\n\n \twhile ( 0 == 0 ) {\n\t\tif ( input ) {\n\n\t\t\tx = x + 1;\n\t\t\tif (x >= n ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tinput = unknown_int();\n\t}\n\t{;//@ assert(x == n);\n}\n\n}",
    "pass_at_k": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
    ],
    "pass_at_k_prune": [
        0.0,
        0.0,
        0.2,
        0.4,
        0.4,
        0.4,
        0.4,
        0.6,
        0.7,
        0.7,
        0.8,
        0.8,
        0.9,
        0.9,
        1.0
    ],
    "checking_exceptions": [],
    "pruning_exceptions": []
}