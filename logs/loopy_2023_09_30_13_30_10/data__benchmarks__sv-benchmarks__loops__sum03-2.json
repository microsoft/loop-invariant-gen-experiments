{
    "logs": {
        "file": [
            "../data/benchmarks/sv-benchmarks/loops/sum03-2.c",
            {
                "code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern unsigned int unknown_uint(void);\n\nextern void abort(void);\n#include <assert.h>\n\n#define a (2)\n\nint main() { \n  unsigned int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  while(1){\n    sn = sn + a;\n    x++;\n    {;\n//@ assert(sn==x*a || sn == 0);\n}\n  }\n}\n"
            }
        ],
        "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern unsigned int unknown_uint(void);\n\nextern void abort(void);\n#include <assert.h>\n\n#define a (2)\n\nint main() { \n  unsigned int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  while(1){\n    sn = sn + a;\n    x++;\n    {;\n//@ assert(sn==x*a || sn == 0);\n}\n  }\n}\n",
        "ground_truth": true,
        "completions": [
            {
                "label": "true",
                "success": true
            },
            {
                "label": "true",
                "success": true
            },
            {
                "label": "true",
                "success": true
            },
            {
                "label": "true",
                "success": true
            }
        ],
        "label": 1.0
    },
    "stats": {
        "success": [
            2,
            3,
            5,
            9,
            10,
            11,
            14,
            15,
            16,
            21,
            24,
            25,
            30,
            32,
            40,
            42,
            45,
            46,
            50,
            51,
            52,
            53,
            55,
            56,
            58,
            60,
            61
        ],
        "failure": [
            0,
            4,
            12,
            18,
            37,
            41,
            49
        ],
        "partial": [
            1,
            6,
            7,
            8,
            13,
            19,
            20,
            22,
            23,
            26,
            27,
            28,
            29,
            33,
            34,
            35,
            36,
            38,
            39,
            43,
            44,
            47,
            48,
            54,
            57,
            59
        ],
        "skipped": [
            17,
            31
        ],
        "total": 60,
        "success_rate": 0.45
    }
}