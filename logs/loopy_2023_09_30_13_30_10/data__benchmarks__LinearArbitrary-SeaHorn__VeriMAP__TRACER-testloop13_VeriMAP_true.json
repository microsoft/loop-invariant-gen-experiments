{
    "logs": {
        "file": [
            "../data/benchmarks/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            {
                "code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern unsigned int unknown_uint(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nint main()\n{\n  int lock, old, new;\n  old = unknown_uint();\n  lock=0;\n  new=old+1;\n\n  while (new != old) {\n    lock = 1;\n    old = new;\n    if (unknown()) {\n      lock = 0;\n      new+=2;\n    }\n  }\n\n  {;\n//@ assert(!( lock==0 ));\n}\n  return 0;\n}"
            }
        ],
        "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern unsigned int unknown_uint(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nint main()\n{\n  int lock, old, new;\n  old = unknown_uint();\n  lock=0;\n  new=old+1;\n\n  while (new != old) {\n    lock = 1;\n    old = new;\n    if (unknown()) {\n      lock = 0;\n      new+=2;\n    }\n  }\n\n  {;\n//@ assert(!( lock==0 ));\n}\n  return 0;\n}",
        "ground_truth": true,
        "completions": [
            {
                "label": "false",
                "success": false
            },
            {
                "label": "false",
                "success": false
            },
            {
                "label": "false",
                "success": false
            },
            {
                "label": "false",
                "success": false
            },
            {
                "label": "false",
                "success": false
            }
        ],
        "label": 0.0
    },
    "stats": {
        "success": [
            2,
            3,
            5,
            9,
            10,
            11,
            14,
            15,
            16,
            21,
            24,
            25,
            30,
            32
        ],
        "failure": [
            0,
            4,
            12,
            18,
            37
        ],
        "partial": [
            1,
            6,
            7,
            8,
            13,
            19,
            20,
            22,
            23,
            26,
            27,
            28,
            29,
            33,
            34,
            35,
            36
        ],
        "skipped": [
            17,
            31
        ],
        "total": 36,
        "success_rate": 0.3888888888888889
    }
}