{
    "file": "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/19.c",
    "benchmark_code": "#define assume(e) if(!(e)) return;\nextern int unknown(void);\n\nint unknown1(){\n    int x; return x;\n}\n\nint unknown2(){\n    int x; return x;\n}\n\nint unknown3();\nint unknown4();\n\nint n, m;\n\nvoid main()\n{\n  n = unknown1();\n  m = unknown2();\n  int x=0; \n  int y;\n  y = m;\n  if(n < 0)\n    return;\n  if(m < 0)\n    return;\n  if(m > n-1)\n    return;\n  while(x<=n-1) {\n    x++;\n    if(x>=m+1) y++;\n    else if(x > m) return;\n    x = x;\n  }\n  if(x < n)\n    return;\n  if(y >= n+1)\n  {goto ERROR; ERROR:{; //@ assert(\\false);\n};}\n}",
    "pass_at_k": [
        0.1,
        0.3,
        0.3,
        0.4,
        0.5,
        0.5,
        0.5,
        0.6,
        0.6,
        0.7,
        0.7,
        0.7,
        0.8,
        0.9,
        1.0
    ],
    "pass_at_k_prune": [
        0.1,
        0.3,
        0.3,
        0.6,
        0.6,
        0.7,
        0.8,
        0.9,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0
    ],
    "checking_exceptions": [],
    "pruning_exceptions": []
}