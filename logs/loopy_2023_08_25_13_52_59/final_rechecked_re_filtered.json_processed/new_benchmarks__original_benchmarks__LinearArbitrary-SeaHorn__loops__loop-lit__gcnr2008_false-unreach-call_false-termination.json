{
    "file": "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/loops/loop-lit/gcnr2008_false-unreach-call_false-termination.c",
    "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main() {\n    int x,y,z,w;\n    x = y = z = w = 0;\n    while (unknown_int() && y < 10000) {\n\tif (unknown_int()) {\n\t    x = x + 1;\n\t    y = y + 100;\n\t} else if (unknown_int()) {\n\t    if (x >= 4) {\n\t\tx = x + 1;\n\t\ty = y + 1;\n\t    }\n\t} else if (y > 10*w && z >= 100*x) {\n\t    y = -y;\n\t}\n\tw = w + 1;\n\tz = z + 10;\n    }\n    {;//@ assert(x >= 4 && y <= 2);\n}\n    return 0;\n}",
    "pass_at_k": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
    ],
    "pass_at_k_prune": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
    ],
    "checking_exceptions": [],
    "pruning_exceptions": []
}