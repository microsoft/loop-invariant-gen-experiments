{
    "logs": {
        "file": "../data/benchmarks/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
        "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown_int(void);\n\nint main(){\n\n\tint x=0;\n\tint y=0;\n\n\twhile (unknown_int()) {\n\t\tif (unknown_int()) {\n\t\t\tx = x+1; \n\t\t\ty = y+2;\n\t\t} else if (unknown_int()) {\n\t\t\tif (x >= 4) {\n\t\t\t    x = x+1; \n\t\t\t    y = y+3; \n\t\t\t}\n\t\t} \n\t}\n\n    if(3*x < y)\n\t\tgoto ERROR;\n\t\n\treturn 0;\n{ ERROR: {; \n//@ assert(\\false);\n}\n}\n\treturn -1;\n}",
        "success": true,
        "repair_tries": [],
        "candidates": [
            "#define assume(e) if(!(e)) return 0;\nextern int unknown_int(void);\n\nint main(){\n\n\tint x=0;\n\tint y=0;\n\n\t/*@\nloop invariant i1: 0 <= x;\nloop invariant i2: 0 <= y;\nloop invariant i3: 2*x <= y;\nloop invariant i4: y <= 3*x;\nloop invariant i5: y <= 2*x;\nloop invariant i6: x <= y + 1;\nloop invariant i7: x >= 0;\nloop invariant i8: y >= 0;\nloop invariant i9: y >= 2 * x;\nloop invariant i10: x >= 4 ==> y >= x + (x - 4);\nloop invariant i11: y >= x;\nloop invariant i12: (\\forall int k; 0 <= k <= x; y >= 2 * k);\nloop invariant i13: (\\forall int k; 4 <= k <= x; y >= 3 * k);\nloop invariant i14: (x < 4) ==> (y <= 2 * x + 1);\nloop invariant i15: x < 4 ==> 3*x <= y;\nloop invariant i16: 2 * x <= y;\nloop invariant i17: (x < 4) ==> (y <= 2*x);\n*/\nwhile (unknown_int()) {\n\t\tif (unknown_int()) {\n\t\t\tx = x+1; \n\t\t\ty = y+2;\n\t\t} else if (unknown_int()) {\n\t\t\tif (x >= 4) {\n\t\t\t    x = x+1; \n\t\t\t    y = y+3; \n\t\t\t}\n\t\t} \n\t}\n\n    if(3*x < y)\n\t\tgoto ERROR;\n\t\n\treturn 0;\n{ ERROR: {; \n//@ assert(\\false);\n}\n}\n\treturn -1;\n}",
            "#define assume(e) if(!(e)) return 0;\nextern int unknown_int(void);\n\nint main(){\n\n\tint x=0;\n\tint y=0;\n\n\t/*@\nloop invariant i1: 0 <= x;\nloop invariant i2: 0 <= y;\nloop invariant i3: 2*x <= y;\nloop invariant i4: (x < 4) ==> (y <= 2*x);\nloop invariant i5: x >= 0;\nloop invariant i6: y >= 0;\nloop invariant i7: y >= 2 * x;\nloop invariant i8: (x >= 4) ==> (y >= 3 * (x - 4));\nloop invariant i9: y <= 3*x;\nloop invariant i10: y <= 2*x;\nloop invariant i11: x <= y + 1;\nloop invariant i12: x >= 4 ==> y >= x + (x - 4);\nloop invariant i13: x >= 4 ==> y >= 3 * x;\nloop invariant i14: (x < 4) ==> (y == 2 * x);\nloop invariant i15: (x >= 4) ==> (y >= 2 * x);\nloop invariant i16: y <= 3 * x;\n*/\nwhile (unknown_int()) {\n\t\tif (unknown_int()) {\n\t\t\tx = x+1; \n\t\t\ty = y+2;\n\t\t} else if (unknown_int()) {\n\t\t\tif (x >= 4) {\n\t\t\t    x = x+1; \n\t\t\t    y = y+3; \n\t\t\t}\n\t\t} \n\t}\n\n    if(3*x < y)\n\t\tgoto ERROR;\n\t\n\treturn 0;\n{ ERROR: {; \n//@ assert(\\false);\n}\n}\n\treturn -1;\n}"
        ]
    },
    "stats": {
        "gen_success": [
            "../data/benchmarks/sv-benchmarks/loops-crafted-1/Mono1_1-2.c",
            "../data/benchmarks/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../data/benchmarks/sv-benchmarks/loop-simple/nested_1.c",
            "../data/benchmarks/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../data/benchmarks/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c"
        ],
        "repair_success": [],
        "repair_failure": [
            "../data/benchmarks/sv-benchmarks/loop-floats-scientific-comp/loop1-2.c",
            "../data/benchmarks/sv-benchmarks/loop-simple/nested_1b.c",
            "../data/benchmarks/sv-benchmarks/loop-invariants/linear-inequality-inv-b.c",
            "../data/benchmarks/sv-benchmarks/loops-crafted-1/Mono1_1-1.c",
            "../data/benchmarks/sv-benchmarks/loops-crafted-1/Mono3_1.c",
            "../data/benchmarks/sv-benchmarks/loop-floats-scientific-comp/loop2-2.c",
            "../data/benchmarks/sv-benchmarks/loop-floats-scientific-comp/loop3.c",
            "../data/benchmarks/sv-benchmarks/loop-floats-scientific-comp/loop1-1.c"
        ],
        "gen_skipped": [],
        "repair_skipped": [
            "../data/benchmarks/sv-benchmarks/loops-crafted-1/mono-crafted_11.c",
            "../data/benchmarks/sv-benchmarks/loop-floats-scientific-comp/loop2-1.c"
        ],
        "total": 8,
        "gen_success_count": 3,
        "repair_success_count": 0,
        "repair_failure_count": 8,
        "gen_skipped_count": 0,
        "repair_skipped_count": 2
    }
}