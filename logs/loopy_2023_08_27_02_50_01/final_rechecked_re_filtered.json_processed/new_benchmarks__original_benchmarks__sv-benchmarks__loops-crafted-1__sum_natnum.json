{
    "file": "../new_benchmarks/original_benchmarks/sv-benchmarks/loops-crafted-1/sum_natnum.c",
    "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint SIZE = 40000; \n\nextern void abort(void);\nextern void __assert_fail(const char *, const char *, unsigned int, const char *) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));\n\nextern void abort(void);\nvoid assume_abort_if_not(int cond) {\n  if(!cond) {abort();}\n}\n\nint main() {\n  int i;\n  unsigned long long sum;\n  i = 0, sum =0; \n  while(i< SIZE){ \n      i = i + 1; \n      sum += i;\n  }\n  {;//@ assert( sum == ((SIZE *(SIZE+1))/2));\n}\n  return 0;\n}",
    "pass_at_k": [
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0
    ],
    "pass_at_k_prune": [
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0
    ],
    "checking_exceptions": [],
    "pruning_exceptions": []
}