{
    "logs": {
        "file": "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/KroeningSharyginaTsitovichWintersteiger-CAV2010-Fig1_true-termination.c",
        "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main() {\n\tint x = unknown_int();\n\tint debug = 0;\n\n\twhile (x < 255) {\n\t\tif (x % 2 != 0) {\n\t\t\tx--;\n\t\t} else {\n\t\t\tx += 2;\n\t\t}\n\t\tif (debug != 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\treturn 0;\n}\n",
        "success": false,
        "llm_conversation": [
            [
                {
                    "role": "system",
                    "content": "Termination of a loop is established using a decreasing variant, also known as a ranking function. \nThe decreasing variant may also need supporting inductive invariants for the proof of termination to be valid.\nProvide the decreasing variant that proves the termination of the loop along with any supporting invariants that may be necessary.\nOutput all the loop invariants and variants in one code block. For example:\n```\n/*@ \n    loop invariant i1;\n    loop invariant i2;\n    loop variant v1;\n*/\n```"
                }
            ],
            [
                {
                    "role": "user",
                    "content": "\n\nUse the ACSL syntax to provide the variant and invariants.\n\n```\n#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main() {\n\tint x = unknown_int();\n\tint debug = 0;\n\n\twhile (x < 255) {\n\t\tif (x % 2 != 0) {\n\t\t\tx--;\n\t\t} else {\n\t\t\tx += 2;\n\t\t}\n\t\tif (debug != 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\nInstead of using conjunctions (&&), provide the conjuncts as separate loop invariants."
                }
            ],
            [
                {
                    "role": "assistant",
                    "content": "```\n/*@ \n    loop invariant 0 <= x <= 256;\n    loop invariant x % 2 == 0;\n    loop variant 256 - x;\n*/\n```"
                },
                {
                    "role": "assistant",
                    "content": "```\n/*@ \n    loop invariant 0 <= x <= 255;\n    loop invariant x % 2 == 0 || x % 2 == 1;\n    loop variant 255 - x;\n*/\n```"
                },
                {
                    "role": "assistant",
                    "content": "```\n/*@ \n    loop invariant 0 <= x <= 256;\n    loop invariant x % 2 == 0;\n    loop variant 256 - x;\n*/\n```"
                },
                {
                    "role": "assistant",
                    "content": "```\n/*@ \n    loop invariant 0 <= x <= 255;\n    loop invariant x % 2 == 0;\n    loop variant 255 - x;\n*/\n```"
                },
                {
                    "role": "assistant",
                    "content": "```\n/*@ \n    loop invariant x <= 255;\n    loop invariant x % 2 == 0 || (x - 1) % 2 == 0;\n    loop variant 255 - x;\n*/\n```"
                }
            ]
        ],
        "invariants": [
            "/*@ \n    loop invariant 0 <= x <= 256;\n    loop invariant x % 2 == 0;\n    loop variant 256 - x;\n*/",
            "/*@ \n    loop invariant 0 <= x <= 255;\n    loop invariant x % 2 == 0 || x % 2 == 1;\n    loop variant 255 - x;\n*/",
            "/*@ \n    loop invariant 0 <= x <= 256;\n    loop invariant x % 2 == 0;\n    loop variant 256 - x;\n*/",
            "/*@ \n    loop invariant 0 <= x <= 255;\n    loop invariant x % 2 == 0;\n    loop variant 255 - x;\n*/",
            "/*@ \n    loop invariant x <= 255;\n    loop invariant x % 2 == 0 || (x - 1) % 2 == 0;\n    loop variant 255 - x;\n*/"
        ],
        "completions": [
            {
                "num_solver_calls": 4,
                "success": false,
                "annotations": "/*@ \n    loop invariant 0 <= x <= 256;\n    loop invariant x % 2 == 0;\n    loop variant 256 - x;\n*/",
                "code_with_loop_invariants": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main() {\n\tint x = unknown_int();\n\tint debug = 0;\n\n\t/*@\nloop invariant i1: 0 <= x <= 256;\nloop invariant i2: x % 2 == 0;\n*/\nwhile (x < 255) {\n\t\tif (x % 2 != 0) {\n\t\t\tx--;\n\t\t} else {\n\t\t\tx += 2;\n\t\t}\n\t\tif (debug != 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\treturn 0;\n}\n",
                "checker_output_for_invariants": false,
                "checker_message_for_invariants": "loop invariant 0 <= x <= 256 is preserved but not established.\nloop invariant x % 2 == 0 is preserved but not established.\n\n",
                "code_with_loop_invariants_after_prune": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main() {\n\tint x = unknown_int();\n\tint debug = 0;\n\n\t/*@\n\n\n*/\nwhile (x < 255) {\n\t\tif (x % 2 != 0) {\n\t\t\tx--;\n\t\t} else {\n\t\t\tx += 2;\n\t\t}\n\t\tif (debug != 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\treturn 0;\n}",
                "checker_output_after_prune": false,
                "candidates": [
                    {
                        "candidate_with_variant": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main() {\n\tint x = unknown_int();\n\tint debug = 0;\n\n\t/*@\n\nloop variant 256 - x;\n*/\nwhile (x < 255) {\n\t\tif (x % 2 != 0) {\n\t\t\tx--;\n\t\t} else {\n\t\t\tx += 2;\n\t\t}\n\t\tif (debug != 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\treturn 0;\n}\n",
                        "checker_output": false,
                        "checker_message": "\n\nLoop variant is Invalid.\n"
                    }
                ]
            },
            {
                "num_solver_calls": 5,
                "success": false,
                "annotations": "/*@ \n    loop invariant 0 <= x <= 255;\n    loop invariant x % 2 == 0 || x % 2 == 1;\n    loop variant 255 - x;\n*/",
                "code_with_loop_invariants": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main() {\n\tint x = unknown_int();\n\tint debug = 0;\n\n\t/*@\nloop invariant i1: 0 <= x <= 255;\nloop invariant i2: x % 2 == 0 || x % 2 == 1;\n*/\nwhile (x < 255) {\n\t\tif (x % 2 != 0) {\n\t\t\tx--;\n\t\t} else {\n\t\t\tx += 2;\n\t\t}\n\t\tif (debug != 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\treturn 0;\n}\n",
                "checker_output_for_invariants": false,
                "checker_message_for_invariants": "loop invariant 0 <= x <= 255 is neither established nor preserved.\nloop invariant x % 2 == 0 || x % 2 == 1 is inductive.\n\n",
                "code_with_loop_invariants_after_prune": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main() {\n\tint x = unknown_int();\n\tint debug = 0;\n\n\t/*@\n\n\n*/\nwhile (x < 255) {\n\t\tif (x % 2 != 0) {\n\t\t\tx--;\n\t\t} else {\n\t\t\tx += 2;\n\t\t}\n\t\tif (debug != 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\treturn 0;\n}",
                "checker_output_after_prune": false,
                "candidates": [
                    {
                        "candidate_with_variant": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main() {\n\tint x = unknown_int();\n\tint debug = 0;\n\n\t/*@\n\nloop variant 255 - x;\n*/\nwhile (x < 255) {\n\t\tif (x % 2 != 0) {\n\t\t\tx--;\n\t\t} else {\n\t\t\tx += 2;\n\t\t}\n\t\tif (debug != 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\treturn 0;\n}\n",
                        "checker_output": false,
                        "checker_message": "\n\nLoop variant is Invalid.\n"
                    }
                ]
            },
            {
                "num_solver_calls": 4,
                "success": false,
                "annotations": "/*@ \n    loop invariant 0 <= x <= 256;\n    loop invariant x % 2 == 0;\n    loop variant 256 - x;\n*/",
                "code_with_loop_invariants": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main() {\n\tint x = unknown_int();\n\tint debug = 0;\n\n\t/*@\nloop invariant i1: 0 <= x <= 256;\nloop invariant i2: x % 2 == 0;\n*/\nwhile (x < 255) {\n\t\tif (x % 2 != 0) {\n\t\t\tx--;\n\t\t} else {\n\t\t\tx += 2;\n\t\t}\n\t\tif (debug != 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\treturn 0;\n}\n",
                "checker_output_for_invariants": false,
                "checker_message_for_invariants": "loop invariant 0 <= x <= 256 is preserved but not established.\nloop invariant x % 2 == 0 is preserved but not established.\n\n",
                "code_with_loop_invariants_after_prune": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main() {\n\tint x = unknown_int();\n\tint debug = 0;\n\n\t/*@\n\n\n*/\nwhile (x < 255) {\n\t\tif (x % 2 != 0) {\n\t\t\tx--;\n\t\t} else {\n\t\t\tx += 2;\n\t\t}\n\t\tif (debug != 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\treturn 0;\n}",
                "checker_output_after_prune": false,
                "candidates": [
                    {
                        "candidate_with_variant": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main() {\n\tint x = unknown_int();\n\tint debug = 0;\n\n\t/*@\n\nloop variant 256 - x;\n*/\nwhile (x < 255) {\n\t\tif (x % 2 != 0) {\n\t\t\tx--;\n\t\t} else {\n\t\t\tx += 2;\n\t\t}\n\t\tif (debug != 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\treturn 0;\n}\n",
                        "checker_output": false,
                        "checker_message": "\n\nLoop variant is Invalid.\n"
                    }
                ]
            },
            {
                "num_solver_calls": 4,
                "success": false,
                "annotations": "/*@ \n    loop invariant 0 <= x <= 255;\n    loop invariant x % 2 == 0;\n    loop variant 255 - x;\n*/",
                "code_with_loop_invariants": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main() {\n\tint x = unknown_int();\n\tint debug = 0;\n\n\t/*@\nloop invariant i1: 0 <= x <= 255;\nloop invariant i2: x % 2 == 0;\n*/\nwhile (x < 255) {\n\t\tif (x % 2 != 0) {\n\t\t\tx--;\n\t\t} else {\n\t\t\tx += 2;\n\t\t}\n\t\tif (debug != 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\treturn 0;\n}\n",
                "checker_output_for_invariants": false,
                "checker_message_for_invariants": "loop invariant 0 <= x <= 255 is neither established nor preserved.\nloop invariant x % 2 == 0 is preserved but not established.\n\n",
                "code_with_loop_invariants_after_prune": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main() {\n\tint x = unknown_int();\n\tint debug = 0;\n\n\t/*@\n\n\n*/\nwhile (x < 255) {\n\t\tif (x % 2 != 0) {\n\t\t\tx--;\n\t\t} else {\n\t\t\tx += 2;\n\t\t}\n\t\tif (debug != 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\treturn 0;\n}",
                "checker_output_after_prune": false,
                "candidates": [
                    {
                        "candidate_with_variant": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main() {\n\tint x = unknown_int();\n\tint debug = 0;\n\n\t/*@\n\nloop variant 255 - x;\n*/\nwhile (x < 255) {\n\t\tif (x % 2 != 0) {\n\t\t\tx--;\n\t\t} else {\n\t\t\tx += 2;\n\t\t}\n\t\tif (debug != 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\treturn 0;\n}\n",
                        "checker_output": false,
                        "checker_message": "\n\nLoop variant is Invalid.\n"
                    }
                ]
            },
            {
                "num_solver_calls": 3,
                "success": false,
                "annotations": "/*@ \n    loop invariant x <= 255;\n    loop invariant x % 2 == 0 || (x - 1) % 2 == 0;\n    loop variant 255 - x;\n*/",
                "code_with_loop_invariants": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main() {\n\tint x = unknown_int();\n\tint debug = 0;\n\n\t/*@\nloop invariant i1: x <= 255;\nloop invariant i2: x % 2 == 0 || (x - 1) % 2 == 0;\n*/\nwhile (x < 255) {\n\t\tif (x % 2 != 0) {\n\t\t\tx--;\n\t\t} else {\n\t\t\tx += 2;\n\t\t}\n\t\tif (debug != 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\treturn 0;\n}\n",
                "checker_output_for_invariants": false,
                "checker_message_for_invariants": "loop invariant x <= 255 is neither established nor preserved.\nloop invariant x % 2 == 0 || (x - 1) % 2 == 0 is inductive.\n\n",
                "code_with_loop_invariants_after_prune": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main() {\n\tint x = unknown_int();\n\tint debug = 0;\n\n\t/*@\n\nloop invariant i2: x % 2 == 0 || (x - 1) % 2 == 0;\n*/\nwhile (x < 255) {\n\t\tif (x % 2 != 0) {\n\t\t\tx--;\n\t\t} else {\n\t\t\tx += 2;\n\t\t}\n\t\tif (debug != 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\treturn 0;\n}",
                "checker_output_after_prune": true,
                "candidates": [
                    {
                        "candidate_with_variant": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main() {\n\tint x = unknown_int();\n\tint debug = 0;\n\n\t/*@\nloop invariant i2: x % 2 == 0 || (x - 1) % 2 == 0;\nloop variant 255 - x;\n*/\nwhile (x < 255) {\n\t\tif (x % 2 != 0) {\n\t\t\tx--;\n\t\t} else {\n\t\t\tx += 2;\n\t\t}\n\t\tif (debug != 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\treturn 0;\n}\n",
                        "checker_output": false,
                        "checker_message": "loop invariant x % 2 == 0 || (x - 1) % 2 == 0 is inductive.\n\nLoop variant is Invalid.\n"
                    }
                ]
            }
        ],
        "individual_completions_num_solver_calls": 20,
        "combined_annotation_num_solver_calls": 6,
        "candidates": [],
        "combined_candidates": [
            {
                "candidate_with_combined_invariants_and_variant": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main() {\n\tint x = unknown_int();\n\tint debug = 0;\n\n\t/*@\n\nloop variant 256 - x;\n*/\nwhile (x < 255) {\n\t\tif (x % 2 != 0) {\n\t\t\tx--;\n\t\t} else {\n\t\t\tx += 2;\n\t\t}\n\t\tif (debug != 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\treturn 0;\n}\n",
                "checker_output": false,
                "checker_message": "\n\nLoop variant is Invalid.\n"
            },
            {
                "candidate_with_combined_invariants_and_variant": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main() {\n\tint x = unknown_int();\n\tint debug = 0;\n\n\t/*@\n\nloop variant 255 - x;\n*/\nwhile (x < 255) {\n\t\tif (x % 2 != 0) {\n\t\t\tx--;\n\t\t} else {\n\t\t\tx += 2;\n\t\t}\n\t\tif (debug != 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\treturn 0;\n}\n",
                "checker_output": false,
                "checker_message": "\n\nLoop variant is Invalid.\n"
            }
        ],
        "code_with_combined_invariants": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main() {\n\tint x = unknown_int();\n\tint debug = 0;\n\n\t/*@\nloop invariant i1: 0 <= x <= 256;\nloop invariant i2: x % 2 == 0;\nloop invariant i3: 0 <= x <= 255;\nloop invariant i4: x % 2 == 0 || x % 2 == 1;\nloop invariant i5: 0 <= x <= 256;\nloop invariant i6: x % 2 == 0;\nloop invariant i7: 0 <= x <= 255;\nloop invariant i8: x % 2 == 0;\nloop invariant i9: x <= 255;\nloop invariant i10: x % 2 == 0 || (x - 1) % 2 == 0;\n*/\nwhile (x < 255) {\n\t\tif (x % 2 != 0) {\n\t\t\tx--;\n\t\t} else {\n\t\t\tx += 2;\n\t\t}\n\t\tif (debug != 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\treturn 0;\n}\n",
        "checker_output_for_combined_invariants": false,
        "checker_message_for_combined_invariants": "loop invariant 0 <= x <= 256 is preserved but not established.\nloop invariant x % 2 == 0 is preserved but not established.\nloop invariant 0 <= x <= 255 is neither established nor preserved.\nloop invariant x % 2 == 0 || x % 2 == 1 is inductive.\nloop invariant 0 <= x <= 256 is inductive.\nloop invariant x % 2 == 0 is inductive.\nloop invariant 0 <= x <= 255 is inductive.\nloop invariant x % 2 == 0 is inductive.\nloop invariant x <= 255 is inductive.\nloop invariant x % 2 == 0 || (x - 1) % 2 == 0 is inductive.\n\n",
        "code_with_combined_invariants_after_prune": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main() {\n\tint x = unknown_int();\n\tint debug = 0;\n\n\t/*@\n\n\n\n\n\n\n*/\nwhile (x < 255) {\n\t\tif (x % 2 != 0) {\n\t\t\tx--;\n\t\t} else {\n\t\t\tx += 2;\n\t\t}\n\t\tif (debug != 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\treturn 0;\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../data/benchmarks/non_termination/loop/Adding_Subtracting_Zero_1_T.c",
            "../data/benchmarks/non_termination/loop/Incorrect_Bit_Calculation_1_T.c",
            "../data/benchmarks/non_termination/loop/Incorrect_Initialization_4_T.c",
            "../data/benchmarks/non_termination/loop/Incorrect_Update_for_Loop_Iterator_2_T.c",
            "../data/benchmarks/non_termination/loop/Missing_Corner-case_Handling_2_T.c",
            "../data/benchmarks/non_termination/loop/Signed_Overflow_Error_2_T.c",
            "../data/benchmarks/non_termination/loop/Signed_Overflow_Error_3_T.c",
            "../data/benchmarks/non_termination/loop/Type_Conversion_in_Comparison_1_T.c",
            "../data/benchmarks/non_termination/loop/Undefined_Behavior_1_T.c",
            "../data/benchmarks/non_termination/loop/Undefined_Behavior_3_T.c",
            "../data/benchmarks/non_termination/loop/Unsigned_Wraparound_Error_1_T.c",
            "../data/benchmarks/non_termination/loop/Unsigned_Wraparound_Error_2_T.c",
            "../data/benchmarks/non_termination/loop/Unsigned_Wraparound_Error_3_T.c",
            "../data/benchmarks/non_termination/loop/Unsigned_Wraparound_Error_4_T.c",
            "../data/benchmarks/non_termination/loop/Using_Erroneous_Condition_2_T.c",
            "../data/benchmarks/tpdb/C/AProVE_numeric/svcomp_java_Break.c",
            "../data/benchmarks/tpdb/C/AProVE_numeric/svcomp_java_Continue1.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/aaron2_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/AliasDarteFeautrierGonnord-SAS2010-ndecr_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/AliasDarteFeautrierGonnord-SAS2010-random1d_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/AliasDarteFeautrierGonnord-SAS2010-speedpldi3_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/AliasDarteFeautrierGonnord-SAS2010-speedpldi4_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChawdharyCookGulwaniSagivYang-ESOP2008-random1d_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChenFlurMukhopadhyay-SAS2012-Ex1.02_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChenFlurMukhopadhyay-SAS2012-Ex1.03_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChenFlurMukhopadhyay-SAS2012-Ex1.04_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChenFlurMukhopadhyay-SAS2012-Ex1.05_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChenFlurMukhopadhyay-SAS2012-Ex2.10_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/genady_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/HeizmannHoenickeLeikePodelski-ATVA2013-Fig2_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/HeizmannHoenickeLeikePodelski-ATVA2013-Fig5_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/HeizmannHoenickeLeikePodelski-ATVA2013-Fig6_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/HeizmannHoenickeLeikePodelski-ATVA2013-Fig8_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/HeizmannHoenickeLeikePodelski-ATVA2013-Fig9_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/KroeningSharyginaTsitovichWintersteiger-CAV2010-Ex_true-termination.c"
        ],
        "failure": [
            "../data/benchmarks/non_termination/loop/Incorrect_Bit_Calculation_2_T.c",
            "../data/benchmarks/non_termination/loop/Incorrect_Bit_Calculation_3_T.c",
            "../data/benchmarks/non_termination/loop/Incorrect_Update_for_Loop_Iterator_1_T.c",
            "../data/benchmarks/non_termination/loop/Signed_Overflow_Error_1_T.c",
            "../data/benchmarks/non_termination/loop/Type_Conversion_in_Comparison_2_T.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/aaron3_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/AliasDarteFeautrierGonnord-SAS2010-counterex1a_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/AliasDarteFeautrierGonnord-SAS2010-cousot9_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/AliasDarteFeautrierGonnord-SAS2010-rsd_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/AliasDarteFeautrierGonnord-SAS2010-speedpldi2_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/AliasDarteFeautrierGonnord-SAS2010-terminate_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/AliasDarteFeautrierGonnord-SAS2010-wise_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/BradleyMannaSipma-ICALP2005-Fig1_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChawdharyCookGulwaniSagivYang-ESOP2008-aaron12_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChawdharyCookGulwaniSagivYang-ESOP2008-aaron1_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChawdharyCookGulwaniSagivYang-ESOP2008-aaron4_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChawdharyCookGulwaniSagivYang-ESOP2008-aaron6_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChenFlurMukhopadhyay-SAS2012-Ex2.01_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChenFlurMukhopadhyay-SAS2012-Ex2.02_false-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChenFlurMukhopadhyay-SAS2012-Ex2.05_false-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChenFlurMukhopadhyay-SAS2012-Ex2.07_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChenFlurMukhopadhyay-SAS2012-Ex2.08_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChenFlurMukhopadhyay-SAS2012-Ex2.13_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChenFlurMukhopadhyay-SAS2012-Ex2.16_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChenFlurMukhopadhyay-SAS2012-Ex2.17_false-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChenFlurMukhopadhyay-SAS2012-Ex2.20_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChenFlurMukhopadhyay-SAS2012-Ex2.22_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChenFlurMukhopadhyay-SAS2012-Ex3.01_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChenFlurMukhopadhyay-SAS2012-Ex3.03_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChenFlurMukhopadhyay-SAS2012-Ex3.04_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChenFlurMukhopadhyay-SAS2012-Ex3.05_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChenFlurMukhopadhyay-SAS2012-Ex3.08_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChenFlurMukhopadhyay-SAS2012-Ex3.09_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/ChenFlurMukhopadhyay-SAS2012-Ex4.01_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/CookSeeZuleger-TACAS2013-Fig1_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/CookSeeZuleger-TACAS2013-Fig7a_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/CookSeeZuleger-TACAS2013-Fig7b_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/GopanReps-CAV2006-Fig1a_true-termination.c.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/GulwaniJainKoskinen-PLDI2009-Fig1_true-termination.c",
            "../data/benchmarks/tpdb/C/SV-COMP_Termination_Category/KroeningSharyginaTsitovichWintersteiger-CAV2010-Fig1_true-termination.c"
        ],
        "skipped": [],
        "total": 75,
        "success_rate": 0.4666666666666667
    }
}