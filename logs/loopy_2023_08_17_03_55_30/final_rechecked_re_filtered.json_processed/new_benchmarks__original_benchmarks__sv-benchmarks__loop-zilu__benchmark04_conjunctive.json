{
    "file": "../new_benchmarks/original_benchmarks/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
    "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int k = unknown_int();\n  int j = unknown_int();\n  int n = unknown_int();\n  \n  if (!(n>=1 && k>=n && j==0)) return 0;\n  while (j<=n-1) {\n    j++;\n    k--;\n  }\n  {;//@ assert(k>=0);\n}\n  return 0;\n}",
    "pass_at_k": [
        0.1,
        0.2,
        0.3,
        0.5,
        0.5,
        0.5,
        0.6,
        0.7,
        0.7,
        0.8,
        0.9,
        1.0,
        1.0,
        1.0,
        1.0
    ],
    "pass_at_k_prune": [
        0.1,
        0.2,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
    ],
    "checking_exceptions": [],
    "pruning_exceptions": []
}