{
    "file": "../new_benchmarks/original_benchmarks/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
    "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int i = unknown_int();\n  int x = unknown_int();\n  int y = unknown_int();\n  int k = unknown_int();\n  j=0;\n  if (!(x+y==k)) return 0;\n  while (unknown_bool()) {\n    if(j==i) {x++;y--;} else {y++;x--;} j++;\n  }\n  {;//@ assert(x+y==k);\n}\n  return 0;\n}",
    "pass_at_k": [
        0.5,
        0.8,
        0.9,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0
    ],
    "pass_at_k_prune": [
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0
    ],
    "checking_exceptions": [],
    "pruning_exceptions": []
}