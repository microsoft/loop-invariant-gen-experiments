Consider the following C program:  
```
int main() {
    int x = __VERIFIER_nondet_int();
    int y = __VERIFIER_nondet_int();
    while (x > 0) {
        x = x + y;
        y--;
    }
    return 0;
}
```
Find the ranking function for the loop in the given program. 

Ensure that the ranking function (or the sequence of expressions) is **decreasing** with every iteration of the loop, and evaluates to a **positive value** while the loop is executing.

**If there is an upper bound to the loop variable, and the loop condition requires the loop variable to not decrease, output an expression involving the upper bound and the old value of the loop variable in every iteration.**

Let's think step by step. 