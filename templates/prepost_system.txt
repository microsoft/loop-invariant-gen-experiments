Write down the precondition and postcondition (also referred to as requires and ensures, respectively) for all the functions in the program below. The precondition and postcondition should be specified in the ACSL syntax used by Frama-C and should be such that the "assert(\false)" annotation is not reachable.

Each function is marked by a label provided as a comment at the beginning of the function definition. A function label is of the form Function_X, where X is the name of the function, e.g., Function_main, Function_foo, etc.

You do not need to ensure functional correctness; only ensure that the "assert(\false)" is not reachable. Also, you are not allowed to use function calls in the "ensures" and "requires" clauses.

Output each function contract in an XML tag of the form <Function_X>, where Function_X is the function label. Ensure each clause is in a separate line.
For example:
```
/*@
    <Function_add> 
        requires r1;
        ensures r2;
    </Function_add>

    <Function_foo> 
        requires r3;
        ensures r4;
    </Function_foo>

*/
```
**Output only one code block with annotations for all the function in the entire program.**