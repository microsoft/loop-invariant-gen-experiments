{
    "file": "../new_benchmarks/original_benchmarks/sv-benchmarks/loop-zilu/benchmark27_linear.c",
    "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  while (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;//@ assert(k > 0);\n}\n  return 0;\n}",
    "pass_at_k": [
        0.0,
        0.2,
        0.4,
        0.6,
        0.7,
        0.8,
        0.8,
        0.8,
        0.9,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0
    ],
    "pass_at_k_prune": [
        0.0,
        0.2,
        0.4,
        0.6,
        0.7,
        0.8,
        0.8,
        0.8,
        0.9,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0
    ],
    "checking_exceptions": [],
    "pruning_exceptions": []
}