{
    "logs": [
        {
            "file": "../data/benchmarks/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern unsigned int unknown_uint(void);\n\n;\n\nvoid errorFn() {ERROR: goto ERROR;}\nint main(){\nint y = unknown_uint();\nint x=0;\n\n    assume(y>=0);\n\n\twhile ( x < 10000) {\n\t\ty = y + 1;\n\t\tx = x + 1;\n\t}\n\n\tif( y + x < 10000)\t\t\n\t\tgoto ERROR;\n\n\treturn 0;\n{ ERROR: {; \n//@ assert(\\false);\n}\n}\n\treturn -1;\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.1,
                "3": 0.1,
                "4": 0.3,
                "5": 0.4,
                "6": 0.6,
                "7": 0.6,
                "8": 0.7,
                "9": 0.7,
                "10": 0.8,
                "11": 0.8,
                "12": 0.9,
                "13": 0.9,
                "14": 0.9,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/1.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  (y = 0);\n  \n  while ((y < 100000)) {\n    {\n    (x  = (x + y));\n    (y  = (y + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= y) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.1,
                "2": 0.3,
                "3": 0.3,
                "4": 0.3,
                "5": 0.3,
                "6": 0.3,
                "7": 0.4,
                "8": 0.6,
                "9": 0.6,
                "10": 0.7,
                "11": 0.7,
                "12": 0.7,
                "13": 0.7,
                "14": 0.9,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.1,
                "2": 0.3,
                "3": 0.3,
                "4": 0.3,
                "5": 0.3,
                "6": 0.3,
                "7": 0.4,
                "8": 0.6,
                "9": 0.6,
                "10": 0.7,
                "11": 0.7,
                "12": 0.7,
                "13": 0.7,
                "14": 0.9,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/2.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  (y = 0);\n  \n  while ((y < 1000)) {\n    {\n    (x  = (x + y));\n    (y  = (y + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= y) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.1,
                "2": 0.2,
                "3": 0.3,
                "4": 0.3,
                "5": 0.3,
                "6": 0.5,
                "7": 0.6,
                "8": 0.7,
                "9": 0.8,
                "10": 0.9,
                "11": 0.9,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.1,
                "2": 0.2,
                "3": 0.3,
                "4": 0.3,
                "5": 0.3,
                "6": 0.5,
                "7": 0.6,
                "8": 0.7,
                "9": 0.8,
                "10": 0.9,
                "11": 0.9,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/3.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    while(x < 5) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/4.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    while(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/5.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main()\n{\n    int x = 0;\n    int size;\n    int y, z;\n\n    while(x < size) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    if(size > 0) {\n       {;\n//@ assert(z >= y);\n}\n\n    }\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.3,
                "2": 0.6,
                "3": 0.8,
                "4": 0.9,
                "5": 0.9,
                "6": 0.9,
                "7": 0.9,
                "8": 0.9,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/6.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main()\n{\n    int v1,v2,v3;\n    int x = 0;\n    int size;\n    int y, z;\n\n    while(x < size) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    if(size > 0) {\n       {;\n//@ assert(z >= y);\n}\n\n    }\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/7.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  assume((x >= 0));\n  assume((x <= 10));\n  assume((y <= 10));\n  assume((y >= 0));\n  \n  while (unknown()) {\n    {\n    (x  = (x + 10));\n    (y  = (y + 10));\n    }\n\n  }\n  \nif ( (x == 20) )\n{;\n//@ assert( (y != 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/8.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  assume((x >= 0));\n  assume((x <= 10));\n  assume((y <= 10));\n  assume((y >= 0));\n  \n  while (unknown()) {\n    {\n    (x  = (x + 10));\n    (y  = (y + 10));\n    }\n\n  }\n  \nif ( (y == 0) )\n{;\n//@ assert( (x != 20) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.3,
                "2": 0.3,
                "3": 0.3,
                "4": 0.3,
                "5": 0.4,
                "6": 0.5,
                "7": 0.5,
                "8": 0.5,
                "9": 0.7,
                "10": 0.8,
                "11": 0.8,
                "12": 0.8,
                "13": 0.9,
                "14": 0.9,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.3,
                "2": 0.3,
                "3": 0.3,
                "4": 0.3,
                "5": 0.4,
                "6": 0.5,
                "7": 0.5,
                "8": 0.5,
                "9": 0.7,
                "10": 0.8,
                "11": 0.8,
                "12": 0.8,
                "13": 0.9,
                "14": 0.9,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/9.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  assume((x >= 0));\n  assume((x <= 2));\n  assume((y <= 2));\n  assume((y >= 0));\n  \n  while (unknown()) {\n    {\n    (x  = (x + 2));\n    (y  = (y + 2));\n    }\n\n  }\n  \nif ( (x == 4) )\n{;\n//@ assert( (y != 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.2,
                "2": 0.4,
                "3": 0.6,
                "4": 0.6,
                "5": 0.7,
                "6": 0.8,
                "7": 0.9,
                "8": 0.9,
                "9": 0.9,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.2,
                "2": 0.5,
                "3": 0.6,
                "4": 0.6,
                "5": 0.7,
                "6": 0.8,
                "7": 0.9,
                "8": 0.9,
                "9": 0.9,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/10.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  assume((x >= 0));\n  assume((x <= 2));\n  assume((y <= 2));\n  assume((y >= 0));\n  \n  while (unknown()) {\n    {\n    (x  = (x + 2));\n    (y  = (y + 2));\n    }\n\n  }\n  \nif ( (y == 0) )\n{;\n//@ assert( (x != 4) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.2,
                "2": 0.3,
                "3": 0.5,
                "4": 0.5,
                "5": 0.5,
                "6": 0.5,
                "7": 0.6,
                "8": 0.7,
                "9": 0.7,
                "10": 0.7,
                "11": 0.8,
                "12": 0.8,
                "13": 0.8,
                "14": 0.8,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/11.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  assume((x >= 0));\n  assume((x <= 10));\n  assume((y <= 10));\n  assume((y >= 0));\n  \n  while (unknown()) {\n    {\n    (x  = (x + 10));\n    (y  = (y + 10));\n    }\n\n  }\n  \nif ( (x == 20) )\n{;\n//@ assert( (y != 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.1,
                "3": 0.2,
                "4": 0.2,
                "5": 0.2,
                "6": 0.3,
                "7": 0.4,
                "8": 0.4,
                "9": 0.5,
                "10": 0.6,
                "11": 0.6,
                "12": 0.7,
                "13": 0.8,
                "14": 0.9,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/12.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  assume((x >= 0));\n  assume((x <= 10));\n  assume((y <= 10));\n  assume((y >= 0));\n  \n  while (unknown()) {\n    {\n    (x  = (x + 10));\n    (y  = (y + 10));\n    }\n\n  }\n  \nif ( (y == 0) )\n{;\n//@ assert( (x != 20) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.1,
                "5": 0.2,
                "6": 0.5,
                "7": 0.5,
                "8": 0.7,
                "9": 0.7,
                "10": 0.8,
                "11": 0.9,
                "12": 0.9,
                "13": 0.9,
                "14": 0.9,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.1,
                "5": 0.2,
                "6": 0.5,
                "7": 0.5,
                "8": 0.7,
                "9": 0.7,
                "10": 0.8,
                "11": 0.9,
                "12": 0.9,
                "13": 0.9,
                "14": 0.9,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/13.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  assume((x >= 0));\n  assume((x <= 2));\n  assume((y <= 2));\n  assume((y >= 0));\n  \n  while (unknown()) {\n    {\n    (x  = (x + 2));\n    (y  = (y + 2));\n    }\n\n  }\n  \nif ( (x == 4) )\n{;\n//@ assert( (y != 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.3,
                "2": 0.4,
                "3": 0.4,
                "4": 0.4,
                "5": 0.4,
                "6": 0.6,
                "7": 0.6,
                "8": 0.6,
                "9": 0.6,
                "10": 0.7,
                "11": 0.8,
                "12": 0.8,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.6,
                "2": 0.7,
                "3": 0.8,
                "4": 0.8,
                "5": 0.8,
                "6": 0.9,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/14.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  assume((x >= 0));\n  assume((x <= 2));\n  assume((y <= 2));\n  assume((y >= 0));\n  \n  while (unknown()) {\n    {\n    (x  = (x + 2));\n    (y  = (y + 2));\n    }\n\n  }\n  \nif ( (y == 0) )\n{;\n//@ assert( (x != 4) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.1,
                "2": 0.2,
                "3": 0.2,
                "4": 0.2,
                "5": 0.2,
                "6": 0.3,
                "7": 0.3,
                "8": 0.3,
                "9": 0.3,
                "10": 0.3,
                "11": 0.3,
                "12": 0.4,
                "13": 0.7,
                "14": 0.9,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.1,
                "2": 0.5,
                "3": 0.5,
                "4": 0.6,
                "5": 0.9,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/15.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main()\n{\n    int x = 0;\n    int m = 0;\n    int n;\n\n    while (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 0) {\n       {;\n//@ assert(m < n);\n}\n\n    }\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/16.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main()\n{\n    int x = 0;\n    int m = 0;\n    int n;\n\n    while (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 0) {\n       \n       {;\n//@ assert(m >= 0);\n}\n\n    }\n}",
            "pass_at_k": {
                "1": 0.1,
                "2": 0.4,
                "3": 0.5,
                "4": 0.5,
                "5": 0.5,
                "6": 0.6,
                "7": 0.6,
                "8": 0.7,
                "9": 0.7,
                "10": 0.9,
                "11": 0.9,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.9,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/17.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main()\n{\n    int x = 1;\n    int m = 1;\n    int n;\n\n    while (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 1) {\n       {;\n//@ assert(m < n);\n}\n\n    }\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/18.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main()\n{\n    int x = 1;\n    int m = 1;\n    int n;\n\n    while (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 1) {\n       \n       {;\n//@ assert(m >= 1);\n}\n\n    }\n}",
            "pass_at_k": {
                "1": 0.3,
                "2": 0.4,
                "3": 0.6,
                "4": 0.7,
                "5": 0.8,
                "6": 0.9,
                "7": 0.9,
                "8": 0.9,
                "9": 0.9,
                "10": 0.9,
                "11": 0.9,
                "12": 0.9,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/19.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main()\n{\n    int z1,z2,z3;\n    int x = 0;\n    int m = 0;\n    int n;\n\n    while (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 0) {\n       {;\n//@ assert(m < n);\n}\n\n    }\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/20.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main()\n{\n    int z1,z2,z3;\n    int x = 0;\n    int m = 0;\n    int n;\n\n    while (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 0) {\n       \n       {;\n//@ assert(m >= 0);\n}\n\n    }\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/21.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main()\n{\n    int z1,z2,z3;\n    int x = 1;\n    int m = 1;\n    int n;\n\n    while (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 1) {\n       {;\n//@ assert(m < n);\n}\n\n    }\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/22.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main()\n{\n    int z1,z2,z3;\n    int x = 1;\n    int m = 1;\n    int n;\n\n    while (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 1) {\n       \n       {;\n//@ assert(m >= 1);\n}\n\n    }\n}",
            "pass_at_k": {
                "1": 0.3,
                "2": 0.5,
                "3": 0.8,
                "4": 0.9,
                "5": 0.9,
                "6": 0.9,
                "7": 0.9,
                "8": 0.9,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/23.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int i;\n  int j;\n  \n  (i = 1);\n  (j = 20);\n  \n  while ((j >= i)) {\n    {\n    (i  = (i + 2));\n    (j  = (j - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (j == 13) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.1,
                "3": 0.2,
                "4": 0.4,
                "5": 0.5,
                "6": 0.5,
                "7": 0.8,
                "8": 0.8,
                "9": 0.8,
                "10": 0.9,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/24.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int i;\n  int j;\n  \n  (i = 1);\n  (j = 10);\n  \n  while ((j >= i)) {\n    {\n    (i  = (i + 2));\n    (j  = (j - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (j == 6) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/25.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int x;\n  \n  (x = 10000);\n  \n  while ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (x == 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/26.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  while ((x > 1)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (x != 1) )\n{;\n//@ assert( (n < 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/27.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  while ((x > 1)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 1) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/28.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  while ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (x != 0) )\n{;\n//@ assert( (n < 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/29.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  while ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/30.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int x;\n  \n  (x = 100);\n  \n  while ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (x == 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/31.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int n;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (x = n);\n  \n  while ((x > 1)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (x != 1) )\n{;\n//@ assert( (n < 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/32.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int n;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (x = n);\n  \n  while ((x > 1)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 1) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/33.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int n;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (x = n);\n  \n  while ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (x != 0) )\n{;\n//@ assert( (n < 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/34.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int n;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (x = n);\n  \n  while ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/35.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != 40) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.1,
                "2": 0.2,
                "3": 0.5,
                "4": 0.6,
                "5": 0.8,
                "6": 0.9,
                "7": 0.9,
                "8": 0.9,
                "9": 0.9,
                "10": 0.9,
                "11": 0.9,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.1,
                "2": 0.2,
                "3": 0.5,
                "4": 0.6,
                "5": 0.8,
                "6": 0.9,
                "7": 0.9,
                "8": 0.9,
                "9": 0.9,
                "10": 0.9,
                "11": 0.9,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/36.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != 40) )\n{;\n//@ assert( (c <= 40) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.9,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/37.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > 40) )\n{;\n//@ assert( (c == 40) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.9,
                "2": 0.9,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.9,
                "2": 0.9,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/38.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n    int n;\n    int c = 0;\n    assume (n > 0);\n\n    while (unknown()) {\n        if(c == n) {\n            c = 1;\n        }\n        else {\n            c = c + 1;\n        }\n    }\n\n    if(c == n) {\n        {;\n//@ assert( c >= 0);\n}\n\n    }\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.6,
                "2": 0.9,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/39.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n    int n;\n    int c = 0;\n    assume (n > 0);\n\n    while (unknown()) {\n        if(c == n) {\n            c = 1;\n        }\n        else {\n            c = c + 1;\n        }\n    }\n\n    if(c == n) {\n        \n        {;\n//@ assert( c <= n);\n}\n\n    }\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.1,
                "3": 0.1,
                "4": 0.2,
                "5": 0.2,
                "6": 0.2,
                "7": 0.2,
                "8": 0.4,
                "9": 0.4,
                "10": 0.6,
                "11": 0.6,
                "12": 0.6,
                "13": 0.8,
                "14": 0.9,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.2,
                "2": 0.7,
                "3": 0.7,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/40.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.3,
                "2": 0.3,
                "3": 0.4,
                "4": 0.7,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/41.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/42.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > n) )\n{;\n//@ assert( (c == n) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.2,
                "2": 0.5,
                "3": 0.7,
                "4": 0.9,
                "5": 0.9,
                "6": 0.9,
                "7": 0.9,
                "8": 0.9,
                "9": 0.9,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/43.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c == n) )\n{;\n//@ assert( (n > -1) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.1,
                "2": 0.3,
                "3": 0.3,
                "4": 0.3,
                "5": 0.4,
                "6": 0.4,
                "7": 0.4,
                "8": 0.5,
                "9": 0.7,
                "10": 0.7,
                "11": 0.7,
                "12": 0.7,
                "13": 0.8,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/44.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (n <= -1) )\n{;\n//@ assert( (c != n) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.2,
                "2": 0.2,
                "3": 0.3,
                "4": 0.3,
                "5": 0.4,
                "6": 0.5,
                "7": 0.5,
                "8": 0.7,
                "9": 0.7,
                "10": 0.8,
                "11": 0.8,
                "12": 0.8,
                "13": 0.9,
                "14": 0.9,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.7,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/45.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/46.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.5,
                "2": 0.8,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.5,
                "2": 0.8,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/47.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > n) )\n{;\n//@ assert( (c == n) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/48.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c == n) )\n{;\n//@ assert( (n > -1) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.1,
                "2": 0.2,
                "3": 0.4,
                "4": 0.5,
                "5": 0.7,
                "6": 0.8,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.6,
                "2": 0.9,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/49.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (n <= -1) )\n{;\n//@ assert( (c != n) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.7,
                "2": 0.9,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/50.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 4) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 4) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != 4) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.6,
                "2": 0.8,
                "3": 0.8,
                "4": 0.9,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.7,
                "2": 0.8,
                "3": 0.9,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/51.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 4) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 4) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != 4) )\n{;\n//@ assert( (c <= 4) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.4,
                "2": 0.7,
                "3": 0.9,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.7,
                "2": 0.9,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/52.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 4) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 4) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > 4) )\n{;\n//@ assert( (c == 4) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.9,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/53.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.1,
                "2": 0.4,
                "3": 0.4,
                "4": 0.7,
                "5": 0.7,
                "6": 0.8,
                "7": 0.9,
                "8": 0.9,
                "9": 0.9,
                "10": 0.9,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.6,
                "2": 0.8,
                "3": 0.9,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/54.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.1,
                "3": 0.1,
                "4": 0.1,
                "5": 0.3,
                "6": 0.4,
                "7": 0.5,
                "8": 0.6,
                "9": 0.6,
                "10": 0.6,
                "11": 0.7,
                "12": 0.8,
                "13": 0.9,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.3,
                "3": 0.7,
                "4": 0.7,
                "5": 0.9,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/55.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > n) )\n{;\n//@ assert( (c == n) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.9,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/56.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c == n) )\n{;\n//@ assert( (n <= -1) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/57.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (n > -1) )\n{;\n//@ assert( (c != n) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/58.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.7,
                "2": 0.8,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/59.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.3,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.3,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/60.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > n) )\n{;\n//@ assert( (c == n) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.9,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/61.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c == n) )\n{;\n//@ assert( (n <= -1) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/62.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (n > -1) )\n{;\n//@ assert( (c != n) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/63.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n    int x = 1;\n    int y;\n\n    while (x <= 10) {\n        y = 10 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y >= 0);\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/64.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n    int x = 1;\n    int y;\n\n    while (x <= 10) {\n        y = 10 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y < 10);\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/65.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n    int x = 1;\n    int y;\n\n    while (x <= 100) {\n        y = 100 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y >= 0);\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/66.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n    int x = 1;\n    int y;\n\n    while (x <= 100) {\n        y = 100 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y < 100);\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/67.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    while (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/68.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    while (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        \n        {;\n//@ assert(y <= n);\n}\n\n    }\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/69.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n    int n, v1, v2, v3;\n    int x = 1;\n    int y;\n\n    while (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n      {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/70.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n    int n, v1, v2, v3;\n    int x = 1;\n    int y;\n\n    while (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n      \n      {;\n//@ assert(y < n);\n}\n\n    }\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/71.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  while (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/72.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  while (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z < 4608) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/73.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  while (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
            "pass_at_k": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/74.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  while (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.1,
                "2": 0.1,
                "3": 0.2,
                "4": 0.2,
                "5": 0.3,
                "6": 0.5,
                "7": 0.5,
                "8": 0.6,
                "9": 0.6,
                "10": 0.6,
                "11": 0.6,
                "12": 0.7,
                "13": 0.7,
                "14": 0.7,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.1,
                "2": 0.1,
                "3": 0.2,
                "4": 0.2,
                "5": 0.3,
                "6": 0.5,
                "7": 0.5,
                "8": 0.6,
                "9": 0.6,
                "10": 0.6,
                "11": 0.6,
                "12": 0.7,
                "13": 0.7,
                "14": 0.7,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/75.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  while (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z < 4608) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/76.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  while (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.6,
                "2": 0.7,
                "3": 0.8,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.7,
                "2": 0.9,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/77.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int x;\n  int y;\n  \n  (i = 0);\n  assume((x >= 0));\n  assume((y >= 0));\n  assume((x >= y));\n  \n  while (unknown()) {\n    if ( (i < y) )\n    {\n    (i  = (i + 1));\n    }\n\n  }\n  \nif ( (i < y) )\n{;\n//@ assert( (i < x) );\n}\n\n}",
            "pass_at_k": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/78.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int x;\n  int y;\n  \n  (i = 0);\n  assume((x >= 0));\n  assume((y >= 0));\n  assume((x >= y));\n  \n  while (unknown()) {\n    if ( (i < y) )\n    {\n    (i  = (i + 1));\n    }\n\n  }\n  \nif ( (i < y) )\n{;\n//@ assert( (0 <= i) );\n}\n\n}",
            "pass_at_k": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/79.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int x;\n  int y;\n  \n  (i = 0);\n  assume((x >= 0));\n  assume((y >= 0));\n  assume((x >= y));\n  \n  while (unknown()) {\n    if ( (i < y) )\n    {\n    (i  = (i + 1));\n    }\n\n  }\n  \nif ( (i >= x) )\nif ( (0 > i) )\n{;\n//@ assert( (i >= y) );\n}\n\n}",
            "pass_at_k": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/80.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = 0);\n  assume((x >= 0));\n  assume((y >= 0));\n  assume((x >= y));\n  \n  while (unknown()) {\n    if ( (i < y) )\n    {\n    (i  = (i + 1));\n    }\n\n  }\n  \nif ( (i < y) )\n{;\n//@ assert( (i < x) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.9,
                "2": 0.9,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.9,
                "2": 0.9,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/81.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = 0);\n  assume((x >= 0));\n  assume((y >= 0));\n  assume((x >= y));\n  \n  while (unknown()) {\n    if ( (i < y) )\n    {\n    (i  = (i + 1));\n    }\n\n  }\n  \nif ( (i < y) )\n{;\n//@ assert( (0 <= i) );\n}\n\n}",
            "pass_at_k": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/82.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = 0);\n  assume((x >= 0));\n  assume((y >= 0));\n  assume((x >= y));\n  \n  while (unknown()) {\n    if ( (i < y) )\n    {\n    (i  = (i + 1));\n    }\n\n  }\n  \nif ( (i >= x) )\nif ( (0 > i) )\n{;\n//@ assert( (i >= y) );\n}\n\n}",
            "pass_at_k": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/83.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = -5000);\n  \n  while ((x < 0)) {\n    {\n    (x  = (x + y));\n    (y  = (y + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (y > 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/84.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = -50);\n  \n  while ((x < 0)) {\n    {\n    (x  = (x + y));\n    (y  = (y + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (y > 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/85.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (x = -15000);\n  \n  while ((x < 0)) {\n    {\n    (x  = (x + y));\n    (y  = (y + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (y > 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/86.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (x = -50);\n  \n  while ((x < 0)) {\n    {\n    (x  = (x + y));\n    (y  = (y + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (y > 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/87.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int lock;\n  int x;\n  int y;\n  \n  (x = y);\n  (lock = 1);\n  \n  while ((x != y)) {\n    {\n      if ( unknown() ) {\n        {\n        (lock  = 1);\n        (x  = y);\n        }\n      } else {\n        {\n        (lock  = 0);\n        (x  = y);\n        (y  = (y + 1));\n        }\n      }\n\n    }\n\n  }\n  \n{;\n//@ assert( (lock == 1) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/88.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int lock;\n  int x;\n  int y;\n  \n  (y = (x + 1));\n  (lock = 0);\n  \n  while ((x != y)) {\n    {\n      if ( unknown() ) {\n        {\n        (lock  = 1);\n        (x  = y);\n        }\n      } else {\n        {\n        (lock  = 0);\n        (x  = y);\n        (y  = (y + 1));\n        }\n      }\n\n    }\n\n  }\n  \n{;\n//@ assert( (lock == 1) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/89.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int lock;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  int y;\n  \n  (x = y);\n  (lock = 1);\n  \n  while ((x != y)) {\n    {\n      if ( unknown() ) {\n        {\n        (lock  = 1);\n        (x  = y);\n        }\n      } else {\n        {\n        (lock  = 0);\n        (x  = y);\n        (y  = (y + 1));\n        }\n      }\n\n    }\n\n  }\n  \n{;\n//@ assert( (lock == 1) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/90.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int lock;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  int y;\n  \n  (y = (x + 1));\n  (lock = 0);\n  \n  while ((x != y)) {\n    {\n      if ( unknown() ) {\n        {\n        (lock  = 1);\n        (x  = y);\n        }\n      } else {\n        {\n        (lock  = 0);\n        (x  = y);\n        (y  = (y + 1));\n        }\n      }\n\n    }\n\n  }\n  \n{;\n//@ assert( (lock == 1) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/91.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main(){\n\n    int x = 0;\n    int y = 0;\n\n    while(y >= 0){\n        y = y + x;\n    }\n\n    {;\n//@ assert( y>= 0);\n}\n\n}",
            "pass_at_k": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/92.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main(){\n    int z1,z2,z3;\n\n    int x = 0;\n    int y = 0;\n\n    while(y >= 0){\n        y = y + x;\n    }\n\n    {;\n//@ assert( y>= 0);\n}\n\n}",
            "pass_at_k": {
                "1": 0.3,
                "2": 0.3,
                "3": 0.4,
                "4": 0.4,
                "5": 0.6,
                "6": 0.7,
                "7": 0.8,
                "8": 0.9,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.3,
                "2": 0.3,
                "3": 0.4,
                "4": 0.4,
                "5": 0.6,
                "6": 0.7,
                "7": 0.8,
                "8": 0.9,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/93.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int n;\n  int x;\n  int y;\n  \n  assume((n >= 0));\n  (i = 0);\n  (x = 0);\n  (y = 0);\n  \n  while ((i < n)) {\n    {\n    (i  = (i + 1));\n      if ( unknown() ) {\n        {\n        (x  = (x + 1));\n        (y  = (y + 2));\n        }\n      } else {\n        {\n        (x  = (x + 2));\n        (y  = (y + 1));\n        }\n      }\n\n    }\n\n  }\n  \n{;\n//@ assert( ((3 * n) == (x + y)) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.9,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/94.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int i;\n  int j;\n  int k;\n  int n;\n  \n  assume((k >= 0));\n  assume((n >= 0));\n  (i = 0);\n  (j = 0);\n  \n  while ((i <= n)) {\n    {\n    (i  = (i + 1));\n    (j  = (j + i));\n    }\n\n  }\n  \n{;\n//@ assert( ((i + (j + k)) > (2 * n)) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/95.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (j = 0);\n  (i = 0);\n  (y = 1);\n  \n  while ((i <= x)) {\n    {\n    (i  = (i + 1));\n    (j  = (j + y));\n    }\n\n  }\n  \nif ( (y == 1) )\n{;\n//@ assert( (i == j) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.1,
                "2": 0.2,
                "3": 0.3,
                "4": 0.4,
                "5": 0.4,
                "6": 0.5,
                "7": 0.5,
                "8": 0.5,
                "9": 0.6,
                "10": 0.6,
                "11": 0.6,
                "12": 0.7,
                "13": 0.9,
                "14": 0.9,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.8,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/96.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (j = 0);\n  (i = 0);\n  (y = 1);\n  \n  while ((i <= x)) {\n    {\n    (i  = (i + 1));\n    (j  = (j + y));\n    }\n\n  }\n  \nif ( (i != j) )\n{;\n//@ assert( (y != 1) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.2,
                "4": 0.3,
                "5": 0.6,
                "6": 0.7,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/97.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (j = 0);\n  (i = 0);\n  (y = 2);\n  \n  while ((i <= x)) {\n    {\n    (i  = (i + 1));\n    (j  = (j + y));\n    }\n\n  }\n  \nif ( (y == 1) )\n{;\n//@ assert( (i == j) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.1,
                "2": 0.1,
                "3": 0.1,
                "4": 0.2,
                "5": 0.2,
                "6": 0.3,
                "7": 0.3,
                "8": 0.3,
                "9": 0.4,
                "10": 0.5,
                "11": 0.6,
                "12": 0.7,
                "13": 0.7,
                "14": 0.8,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.9,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/98.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (j = 0);\n  (i = 0);\n  (y = 2);\n  \n  while ((i <= x)) {\n    {\n    (i  = (i + 1));\n    (j  = (j + y));\n    }\n\n  }\n  \nif ( (i != j) )\n{;\n//@ assert( (y != 1) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.1,
                "2": 0.4,
                "3": 0.5,
                "4": 0.5,
                "5": 0.5,
                "6": 0.5,
                "7": 0.5,
                "8": 0.6,
                "9": 0.7,
                "10": 0.8,
                "11": 0.9,
                "12": 0.9,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.3,
                "2": 0.8,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/99.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int n;\n  int x;\n  int y;\n  \n  assume((n >= 0));\n  (x = n);\n  (y = 0);\n  \n  while ((x > 0)) {\n    {\n    (y  = (y + 1));\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (n == (x + y)) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.9,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.9,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/100.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int n;\n  int x;\n  int y;\n  \n  assume((n >= 0));\n  (x = n);\n  (y = 0);\n  \n  while ((x > 0)) {\n    {\n    (y  = (y + 1));\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (y == n) );\n}\n\n}",
            "pass_at_k": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/101.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = 0);\n  \n  while ((x < n)) {\n    {\n    (x  = (x + 1));\n    }\n\n  }\n  \nif ( (x != n) )\n{;\n//@ assert( (n < 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/102.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = 0);\n  \n  while ((x < n)) {\n    {\n    (x  = (x + 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == n) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/103.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int x;\n  \n  (x = 0);\n  \n  while ((x < 100)) {\n    {\n    (x  = (x + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (x == 100) );\n}\n\n}",
            "pass_at_k": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/104.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int n;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (x = 0);\n  \n  while ((x < n)) {\n    {\n    (x  = (x + 1));\n    }\n\n  }\n  \nif ( (x != n) )\n{;\n//@ assert( (n < 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/105.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int n;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (x = 0);\n  \n  while ((x < n)) {\n    {\n    (x  = (x + 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == n) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/106.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n    int a,m,j,k;\n\n    assume(a <= m);\n    assume(j < 1);\n    k = 0;\n\n    while ( k < 1) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    {;\n//@ assert( a >= m);\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/107.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n    int a,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    while ( k < 1) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    {;\n//@ assert( a <= m);\n}\n\n}",
            "pass_at_k": {
                "1": 0.4,
                "2": 0.5,
                "3": 0.6,
                "4": 0.7,
                "5": 0.7,
                "6": 0.8,
                "7": 0.8,
                "8": 0.8,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.4,
                "2": 0.5,
                "3": 0.6,
                "4": 0.7,
                "5": 0.7,
                "6": 0.8,
                "7": 0.8,
                "8": 0.8,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/108.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n    int a,c,m,j,k;\n\n    assume(a <= m);\n    j = 0;\n    k = 0;\n\n    while ( k < c) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    {;\n//@ assert( a <=  m);\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/109.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n    int a,c,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    while ( k < c) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    if( c > 0 ) {\n        {;\n//@ assert( a <=  m);\n}\n\n    }\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.1,
                "2": 0.1,
                "3": 0.2,
                "4": 0.5,
                "5": 0.6,
                "6": 0.6,
                "7": 0.6,
                "8": 0.6,
                "9": 0.6,
                "10": 0.7,
                "11": 0.8,
                "12": 0.8,
                "13": 0.8,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/110.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int i;\n  int n;\n  int sn;\n  \n  (sn = 0);\n  (i = 1);\n  \n  while ((i <= n)) {\n    {\n    (i  = (i + 1));\n    (sn  = (sn + 1));\n    }\n\n  }\n  \nif ( (sn != n) )\n{;\n//@ assert( (sn == 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/111.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int i;\n  int n;\n  int sn;\n  \n  (sn = 0);\n  (i = 1);\n  \n  while ((i <= n)) {\n    {\n    (i  = (i + 1));\n    (sn  = (sn + 1));\n    }\n\n  }\n  \nif ( (sn != 0) )\n{;\n//@ assert( (sn == n) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/112.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int i;\n  int n;\n  int sn;\n  int v1;\n  int v2;\n  int v3;\n  \n  (sn = 0);\n  (i = 1);\n  \n  while ((i <= n)) {\n    {\n    (i  = (i + 1));\n    (sn  = (sn + 1));\n    }\n\n  }\n  \nif ( (sn != n) )\n{;\n//@ assert( (sn == 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/113.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int i;\n  int n;\n  int sn;\n  int v1;\n  int v2;\n  int v3;\n  \n  (sn = 0);\n  (i = 1);\n  \n  while ((i <= n)) {\n    {\n    (i  = (i + 1));\n    (sn  = (sn + 1));\n    }\n\n  }\n  \nif ( (sn != 0) )\n{;\n//@ assert( (sn == n) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/114.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int sn;\n  int x;\n  \n  (sn = 0);\n  (x = 0);\n  \n  while (unknown()) {\n    {\n    (x  = (x + 1));\n    (sn  = (sn + 1));\n    }\n\n  }\n  \nif ( (sn != x) )\n{;\n//@ assert( (sn == -1) );\n}\n\n}",
            "pass_at_k": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/115.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int sn;\n  int x;\n  \n  (sn = 0);\n  (x = 0);\n  \n  while (unknown()) {\n    {\n    (x  = (x + 1));\n    (sn  = (sn + 1));\n    }\n\n  }\n  \nif ( (sn != -1) )\n{;\n//@ assert( (sn == x) );\n}\n\n}",
            "pass_at_k": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/116.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int sn;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (sn = 0);\n  (x = 0);\n  \n  while (unknown()) {\n    {\n    (x  = (x + 1));\n    (sn  = (sn + 1));\n    }\n\n  }\n  \nif ( (sn != x) )\n{;\n//@ assert( (sn == -1) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.7,
                "2": 0.9,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.8,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/117.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n  \n  int sn;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (sn = 0);\n  (x = 0);\n  \n  while (unknown()) {\n    {\n    (x  = (x + 1));\n    (sn  = (sn + 1));\n    }\n\n  }\n  \nif ( (sn != -1) )\n{;\n//@ assert( (sn == x) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.4,
                "2": 0.5,
                "3": 0.7,
                "4": 0.9,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.6,
                "2": 0.7,
                "3": 0.9,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/118.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int i;\n  int size;\n  int sn;\n  \n  (sn = 0);\n  (i = 1);\n  \n  while ((i <= size)) {\n    {\n    (i  = (i + 1));\n    (sn  = (sn + 1));\n    }\n\n  }\n  \nif ( (sn != size) )\n{;\n//@ assert( (sn == 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/119.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int i;\n  int size;\n  int sn;\n  \n  (sn = 0);\n  (i = 1);\n  \n  while ((i <= size)) {\n    {\n    (i  = (i + 1));\n    (sn  = (sn + 1));\n    }\n\n  }\n  \nif ( (sn != 0) )\n{;\n//@ assert( (sn == size) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/120.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int i;\n  int sn;\n  \n  (sn = 0);\n  (i = 1);\n  \n  while ((i <= 8)) {\n    {\n    (i  = (i + 1));\n    (sn  = (sn + 1));\n    }\n\n  }\n  \nif ( (sn != 8) )\n{;\n//@ assert( (sn == 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/121.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int i;\n  int sn;\n  \n  (sn = 0);\n  (i = 1);\n  \n  while ((i <= 8)) {\n    {\n    (i  = (i + 1));\n    (sn  = (sn + 1));\n    }\n\n  }\n  \nif ( (sn != 0) )\n{;\n//@ assert( (sn == 8) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.9,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.9,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/122.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int i;\n  int size;\n  int sn;\n  int v1;\n  int v2;\n  int v3;\n  \n  (sn = 0);\n  (i = 1);\n  \n  while ((i <= size)) {\n    {\n    (i  = (i + 1));\n    (sn  = (sn + 1));\n    }\n\n  }\n  \nif ( (sn != size) )\n{;\n//@ assert( (sn == 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/123.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int i;\n  int size;\n  int sn;\n  int v1;\n  int v2;\n  int v3;\n  \n  (sn = 0);\n  (i = 1);\n  \n  while ((i <= size)) {\n    {\n    (i  = (i + 1));\n    (sn  = (sn + 1));\n    }\n\n  }\n  \nif ( (sn != 0) )\n{;\n//@ assert( (sn == size) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/124.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  while ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.2,
                "2": 0.3,
                "3": 0.5,
                "4": 0.6,
                "5": 0.6,
                "6": 0.8,
                "7": 0.8,
                "8": 0.8,
                "9": 0.8,
                "10": 0.8,
                "11": 0.9,
                "12": 0.9,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/125.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  while ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.2,
                "5": 0.2,
                "6": 0.4,
                "7": 0.4,
                "8": 0.7,
                "9": 0.7,
                "10": 0.7,
                "11": 0.7,
                "12": 0.8,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 0.6,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/126.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  while ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.7,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/127.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  while ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.5,
                "2": 0.9,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/128.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  while ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.1,
                "2": 0.1,
                "3": 0.2,
                "4": 0.2,
                "5": 0.2,
                "6": 0.2,
                "7": 0.4,
                "8": 0.6,
                "9": 0.7,
                "10": 0.7,
                "11": 0.7,
                "12": 0.7,
                "13": 0.8,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/129.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (x = 1);\n  \n  while ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/130.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n    int d1 = 1;\n    int d2 = 1;\n    int d3 = 1;\n    int x1 = 1;\n    int x2,x3;\n\n    while( x1 > 0) {\n        if(x2 > 0) {\n            if(x3 > 0) {\n                x1 = x1 - d1;\n                x2 = x2 - d2;\n                x3 = x3 - d3;\n            }\n        }\n    }\n\n    {;\n//@ assert(x2 >= 0);\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/131.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n    int d1 = 1;\n    int d2 = 1;\n    int d3 = 1;\n    int x1 = 1;\n    int x2,x3;\n\n    while( x1 > 0) {\n        if(x2 > 0) {\n            if(x3 > 0) {\n                x1 = x1 - d1;\n                x2 = x2 - d2;\n                x3 = x3 - d3;\n            }\n        }\n    }\n\n    {;\n//@ assert(x3 >= 0);\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/132.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n    int i = 0;\n    int j, c, t;\n\n    while( unknown() ) {\n        if(c > 48) {\n            if (c < 57) {\n                j = i + i;\n                t = c - 48;\n                i = j + t;\n            }\n        }\n    } \n    {;\n//@ assert(i >= 0);\n}\n\n}",
            "pass_at_k": {
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        },
        {
            "file": "../data/benchmarks/code2inv/133.c",
            "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = 0);\n  assume((n >= 0));\n  \n  while ((x < n)) {\n    {\n    (x  = (x + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (x == n) );\n}\n\n}",
            "pass_at_k": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            },
            "pass_at_k_prune": {
                "1": 1.0,
                "2": 1.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 1.0,
                "14": 1.0,
                "15": 1.0
            }
        }
    ]
}