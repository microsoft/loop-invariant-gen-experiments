{
    "logs": {
        "file": "../data/benchmarks/code2inv/132.c",
        "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n    int i = 0;\n    int j, c, t;\n\n    while( unknown() ) {\n        if(c > 48) {\n            if (c < 57) {\n                j = i + i;\n                t = c - 48;\n                i = j + t;\n            }\n        }\n    } \n    {;\n//@ assert(i >= 0);\n}\n}",
        "success": true,
        "repair_tries": [],
        "candidates": [
            "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n    int i = 0;\n    int j, c, t;\n\n    /*@\nloop invariant i1: i >= 0;\nloop invariant i2: (c > 48 && c < 57) ==> i == (\\old(i) * 2) + (c - 48);\nloop invariant i3: c >= 48 ==> i >= j;\nloop invariant i4: c >= 48 ==> j == 2 * \\at(i, Pre);\nloop invariant i5: c >= 48 ==> t == c - 48;\nloop invariant i6: c >= 48 ==> i == \\at(i, Pre) + \\at(j, Pre) + \\at(t, Pre);\nloop invariant i7: (c > 48 && c < 57) ==> j == 2 * i;\nloop invariant i8: (c > 48 && c < 57) ==> i == \\old(i) + c - 48;\nloop invariant i9: \\forall integer x; 48 < x < 57 ==> i >= (x - 48);\nloop invariant i10: (c > 48 && c < 57) ==> (j == 2 * i);\nloop invariant i11: (c > 48 && c < 57) ==> (t == c - 48);\nloop invariant i12: (c > 48 && c < 57) ==> (i == \\old(i) + j + t);\nloop invariant i13: (c > 48 && c < 57) ==> i == (i - (c - 48)) + (i - (c - 48));\nloop invariant i14: (c <= 48 || c >= 57) ==> (i == \\at(i, LoopEntry));\nloop invariant i15: (c > 48 && c < 57) ==> (i == \\at(i, LoopEntry) + (c-48)*2);\n*/\nwhile( unknown() ) {\n        if(c > 48) {\n            if (c < 57) {\n                j = i + i;\n                t = c - 48;\n                i = j + t;\n            }\n        }\n    } \n    {;\n//@ assert(i >= 0);\n}\n}",
            "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\n\nint main() {\n    int i = 0;\n    int j, c, t;\n\n    /*@\nloop invariant i1: i >= 0;\nloop invariant i2: (c > 48 && c < 57) ==> j == 2 * i;\nloop invariant i3: (c > 48 && c < 57) ==> i == \\old(i) + c - 48;\nloop invariant i4: (c > 48 && c < 57) ==> (t >= 1 && t <= 8);\nloop invariant i5: (c > 48 && c < 57) ==> (j == 2*i);\nloop invariant i6: (c > 48 && c < 57) ==> (i == \\old(i)*2 + t);\nloop invariant i7: (c > 48 && c < 57) ==> i == (i - (c - 48)) + (i - (c - 48));\nloop invariant i8: (c > 48 && c < 57) ==> (j == 2 * i);\nloop invariant i9: (c > 48 && c < 57) ==> (t == c - 48);\nloop invariant i10: (c > 48 && c < 57) ==> (i == \\old(i) + j + t);\nloop invariant i11: (c <= 48 || c >= 57) ==> (i == \\at(i, LoopEntry));\nloop invariant i12: (c > 48 && c < 57) ==> (i == \\at(i, LoopEntry) + (c-48)*2);\nloop invariant i13: \\forall int k; 0 <= k < i ==> 0 <= k + k < i;\nloop invariant i14: c <= 48 || c >= 57 || (c > 48 && c < 57);\nloop invariant i15: \\forall integer x; 48 < x < 57 ==> i >= (x - 48);\nloop invariant i16: (c > 48 && c < 57) ==> (i == \\old(i) + c - 48);\n*/\nwhile( unknown() ) {\n        if(c > 48) {\n            if (c < 57) {\n                j = i + i;\n                t = c - 48;\n                i = j + t;\n            }\n        }\n    } \n    {;\n//@ assert(i >= 0);\n}\n}"
        ]
    },
    "stats": {
        "gen_success": [
            "../data/benchmarks/code2inv/1.c",
            "../data/benchmarks/code2inv/2.c",
            "../data/benchmarks/code2inv/3.c",
            "../data/benchmarks/code2inv/4.c",
            "../data/benchmarks/code2inv/5.c",
            "../data/benchmarks/code2inv/6.c",
            "../data/benchmarks/code2inv/7.c",
            "../data/benchmarks/code2inv/8.c",
            "../data/benchmarks/code2inv/9.c",
            "../data/benchmarks/code2inv/10.c",
            "../data/benchmarks/code2inv/11.c",
            "../data/benchmarks/code2inv/12.c",
            "../data/benchmarks/code2inv/13.c",
            "../data/benchmarks/code2inv/14.c",
            "../data/benchmarks/code2inv/16.c",
            "../data/benchmarks/code2inv/18.c",
            "../data/benchmarks/code2inv/19.c",
            "../data/benchmarks/code2inv/20.c",
            "../data/benchmarks/code2inv/21.c",
            "../data/benchmarks/code2inv/22.c",
            "../data/benchmarks/code2inv/23.c",
            "../data/benchmarks/code2inv/25.c",
            "../data/benchmarks/code2inv/29.c",
            "../data/benchmarks/code2inv/30.c",
            "../data/benchmarks/code2inv/34.c",
            "../data/benchmarks/code2inv/35.c",
            "../data/benchmarks/code2inv/36.c",
            "../data/benchmarks/code2inv/37.c",
            "../data/benchmarks/code2inv/38.c",
            "../data/benchmarks/code2inv/39.c",
            "../data/benchmarks/code2inv/40.c",
            "../data/benchmarks/code2inv/41.c",
            "../data/benchmarks/code2inv/42.c",
            "../data/benchmarks/code2inv/43.c",
            "../data/benchmarks/code2inv/44.c",
            "../data/benchmarks/code2inv/45.c",
            "../data/benchmarks/code2inv/46.c",
            "../data/benchmarks/code2inv/47.c",
            "../data/benchmarks/code2inv/48.c",
            "../data/benchmarks/code2inv/49.c",
            "../data/benchmarks/code2inv/50.c",
            "../data/benchmarks/code2inv/51.c",
            "../data/benchmarks/code2inv/52.c",
            "../data/benchmarks/code2inv/53.c",
            "../data/benchmarks/code2inv/54.c",
            "../data/benchmarks/code2inv/55.c",
            "../data/benchmarks/code2inv/58.c",
            "../data/benchmarks/code2inv/59.c",
            "../data/benchmarks/code2inv/60.c",
            "../data/benchmarks/code2inv/68.c",
            "../data/benchmarks/code2inv/71.c",
            "../data/benchmarks/code2inv/73.c",
            "../data/benchmarks/code2inv/74.c",
            "../data/benchmarks/code2inv/76.c",
            "../data/benchmarks/code2inv/77.c",
            "../data/benchmarks/code2inv/78.c",
            "../data/benchmarks/code2inv/79.c",
            "../data/benchmarks/code2inv/80.c",
            "../data/benchmarks/code2inv/81.c",
            "../data/benchmarks/code2inv/82.c",
            "../data/benchmarks/code2inv/83.c",
            "../data/benchmarks/code2inv/87.c",
            "../data/benchmarks/code2inv/88.c",
            "../data/benchmarks/code2inv/89.c",
            "../data/benchmarks/code2inv/90.c",
            "../data/benchmarks/code2inv/91.c",
            "../data/benchmarks/code2inv/92.c",
            "../data/benchmarks/code2inv/93.c",
            "../data/benchmarks/code2inv/94.c",
            "../data/benchmarks/code2inv/95.c",
            "../data/benchmarks/code2inv/96.c",
            "../data/benchmarks/code2inv/97.c",
            "../data/benchmarks/code2inv/98.c",
            "../data/benchmarks/code2inv/99.c",
            "../data/benchmarks/code2inv/100.c",
            "../data/benchmarks/code2inv/103.c",
            "../data/benchmarks/code2inv/107.c",
            "../data/benchmarks/code2inv/108.c",
            "../data/benchmarks/code2inv/109.c",
            "../data/benchmarks/code2inv/114.c",
            "../data/benchmarks/code2inv/115.c",
            "../data/benchmarks/code2inv/116.c",
            "../data/benchmarks/code2inv/117.c",
            "../data/benchmarks/code2inv/120.c",
            "../data/benchmarks/code2inv/121.c",
            "../data/benchmarks/code2inv/124.c",
            "../data/benchmarks/code2inv/125.c",
            "../data/benchmarks/code2inv/126.c",
            "../data/benchmarks/code2inv/127.c",
            "../data/benchmarks/code2inv/128.c",
            "../data/benchmarks/code2inv/129.c",
            "../data/benchmarks/code2inv/131.c",
            "../data/benchmarks/code2inv/132.c"
        ],
        "repair_success": [
            "../data/benchmarks/code2inv/15.c",
            "../data/benchmarks/code2inv/56.c",
            "../data/benchmarks/code2inv/57.c",
            "../data/benchmarks/code2inv/63.c",
            "../data/benchmarks/code2inv/64.c",
            "../data/benchmarks/code2inv/67.c",
            "../data/benchmarks/code2inv/102.c",
            "../data/benchmarks/code2inv/112.c",
            "../data/benchmarks/code2inv/118.c"
        ],
        "repair_failure": [
            "../data/benchmarks/code2inv/17.c",
            "../data/benchmarks/code2inv/24.c",
            "../data/benchmarks/code2inv/26.c",
            "../data/benchmarks/code2inv/27.c",
            "../data/benchmarks/code2inv/28.c",
            "../data/benchmarks/code2inv/31.c",
            "../data/benchmarks/code2inv/32.c",
            "../data/benchmarks/code2inv/33.c",
            "../data/benchmarks/code2inv/61.c",
            "../data/benchmarks/code2inv/62.c",
            "../data/benchmarks/code2inv/65.c",
            "../data/benchmarks/code2inv/66.c",
            "../data/benchmarks/code2inv/69.c",
            "../data/benchmarks/code2inv/70.c",
            "../data/benchmarks/code2inv/72.c",
            "../data/benchmarks/code2inv/75.c",
            "../data/benchmarks/code2inv/84.c",
            "../data/benchmarks/code2inv/85.c",
            "../data/benchmarks/code2inv/86.c",
            "../data/benchmarks/code2inv/101.c",
            "../data/benchmarks/code2inv/104.c",
            "../data/benchmarks/code2inv/105.c",
            "../data/benchmarks/code2inv/106.c",
            "../data/benchmarks/code2inv/110.c",
            "../data/benchmarks/code2inv/111.c",
            "../data/benchmarks/code2inv/113.c",
            "../data/benchmarks/code2inv/119.c",
            "../data/benchmarks/code2inv/122.c",
            "../data/benchmarks/code2inv/123.c",
            "../data/benchmarks/code2inv/130.c"
        ],
        "gen_skipped": [],
        "repair_skipped": [],
        "total": 39,
        "gen_success_count": 91,
        "repair_success_count": 9,
        "repair_failure_count": 30,
        "gen_skipped_count": 0,
        "repair_skipped_count": 0
    }
}