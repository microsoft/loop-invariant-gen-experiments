{
    "logs": {
        "file": "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
        "benchmark_code": "#define assume(e) if(!(e)) return;\nextern int unknown(void);\n\nvoid assert (int cond) { if (!cond) __VERIFIER_error (); }\nvoid main() {\n\tint n = unknown();\n    int x1 = 0;\n    int x2 = 0;\n\n    int i1 = 0; \n    int i2 = 1; \n\twhile (1)\n\t{\n    \tif ( i1 <= n) {\n\t        x1 = x1 + i1;\n    \t    i1++;\n\t    }\n\n\t\tif ( i2 <= n) {\n\t        x2 = x2 + i2;\n    \t    i2++;\n\t\t}\n\n\t\tif (i1>n && i2>n) break;\n\t\t{;//@ assert(x2==x1+i1);\n}\n    }\n}",
        "success": true,
        "repair_tries": [],
        "candidates": [
            "#define assume(e) if(!(e)) return;\nextern int unknown(void);\n\nvoid assert (int cond) { if (!cond) __VERIFIER_error (); }\nvoid main() {\n\tint n = unknown();\n    int x1 = 0;\n    int x2 = 0;\n\n    int i1 = 0; \n    int i2 = 1; \n\t/*@\nloop invariant i1: i1 >= 0;\nloop invariant i2: i2 >= 1;\nloop invariant i3: x1 >= 0;\nloop invariant i4: x2 >= 0;\nloop invariant i5: i2 <= i1 + 1;\nloop invariant i6: x2 >= x1;\nloop invariant i7: (i1 <= n) ==> x1 >= (i1 * (i1 - 1)) / 2;\nloop invariant i8: (i2 <= n) ==> x2 >= (i2 * (i2 - 1)) / 2;\nloop invariant i9: (i1 > n) ==> x2 == x1 + i1;\nloop invariant i10: 0 <= i1 <= n+1;\nloop invariant i11: 0 <= i2 <= n+1;\nloop invariant i12: 0 <= x1 <= n*(n+1)/2;\nloop invariant i13: 0 <= x2 <= (n+1)*(n+2)/2;\nloop invariant i14: i2 == i1 + 1;\nloop invariant i15: (i1 <= n) ==> (x1 == i1*(i1-1)/2);\nloop invariant i16: (i2 <= n) ==> (x2 == i2*(i2-1)/2);\nloop invariant i17: (i1 > n) ==> (x2 == x1 + i1);\nloop invariant i18: 0 <= x2 <= n*(n+1)/2;\nloop invariant i19: 1 <= i2 <= n+1;\nloop invariant i20: x2 == x1 + i1 * (i1 <= n) + (i1 - 1) * (i1 > n);\nloop invariant i21: 0 <= x1;\nloop invariant i22: 0 <= x2;\nloop invariant i23: x1 <= x2;\nloop invariant i24: i2 == i1+1;\nloop invariant i25: x2 == x1 + i1;\nloop invariant i26: 0 <= i1 && i1 <= n+1;\nloop invariant i27: 1 <= i2 && i2 <= n+1;\nloop invariant i28: 0 <= x1 && x1 <= (n*(n+1))/2;\nloop invariant i29: 0 <= x2 && x2 <= (n*(n+1))/2;\nloop invariant i30: x1 <= x2 && x2 <= x1+i1+i2;\nloop invariant i31: (i1 <= n) ==> (x1 == (i1*(i1-1))/2);\nloop invariant i32: (i2 <= n) ==> (x2 == (i2*(i2-1))/2);\nloop invariant i33: (i1 > n && i2 > n) ==> (x2 == x1+i1);\nloop invariant i34: 0 <= i2 && i2 <= n+1;\nloop invariant i35: 0 <= x1 && x1 <= n*(n+1)/2;\nloop invariant i36: 0 <= x2 && x2 <= n*(n+1)/2;\nloop invariant i37: (i1 <= n) ==> (x1 == (i1-1)*i1/2);\nloop invariant i38: (i1 > n) ==> (x1 == n*(n+1)/2);\nloop invariant i39: (i2 <= n) ==> (x2 == i1*i2/2);\nloop invariant i40: (i2 > n) ==> (x2 == (n+1)*n/2);\nloop invariant i41: (i2 > n) ==> (x2 == x1 + i1);\nloop invariant i42: x2 == x1 + i1 || x2 == x1 + i1 - 1;\n*/\nwhile (1)\n\t{\n    \tif ( i1 <= n) {\n\t        x1 = x1 + i1;\n    \t    i1++;\n\t    }\n\n\t\tif ( i2 <= n) {\n\t        x2 = x2 + i2;\n    \t    i2++;\n\t\t}\n\n\t\tif (i1>n && i2>n) break;\n\t\t{;//@ assert(x2==x1+i1);\n}\n    }\n}",
            "#define assume(e) if(!(e)) return;\nextern int unknown(void);\n\nvoid assert (int cond) { if (!cond) __VERIFIER_error (); }\nvoid main() {\n\tint n = unknown();\n    int x1 = 0;\n    int x2 = 0;\n\n    int i1 = 0; \n    int i2 = 1; \n\t/*@\nloop invariant i1: 0 <= i1 <= n+1;\nloop invariant i2: 0 <= i2 <= n+1;\nloop invariant i3: 0 <= x1 <= n*(n+1)/2;\nloop invariant i4: 0 <= x2 <= (n+1)*(n+2)/2;\nloop invariant i5: i2 == i1 + 1;\nloop invariant i6: (i1 <= n) ==> (x1 == i1*(i1-1)/2);\nloop invariant i7: (i2 <= n) ==> (x2 == i2*(i2-1)/2);\nloop invariant i8: (i1 > n) ==> (x2 == x1 + i1);\nloop invariant i9: 0 <= i1;\nloop invariant i10: 0 <= i2;\nloop invariant i11: i1 <= n + 1;\nloop invariant i12: i2 <= n + 1;\nloop invariant i13: i1 >= i2 - 1;\nloop invariant i14: i2 >= i1;\nloop invariant i15: x1 >= 0;\nloop invariant i16: x2 >= 0;\nloop invariant i17: x1 >= i1 * (i1 - 1) / 2;\nloop invariant i18: x2 >= i2 * (i2 - 1) / 2;\nloop invariant i19: (i1 > n && i2 > n) ==> (x2 == x1 + i1);\nloop invariant i20: i1 >= 0;\nloop invariant i21: i2 >= 1;\nloop invariant i22: i2 <= i1 + 1;\nloop invariant i23: x2 >= x1;\nloop invariant i24: (i1 <= n) ==> x1 >= (i1 * (i1 - 1)) / 2;\nloop invariant i25: (i2 <= n) ==> x2 >= (i2 * (i2 - 1)) / 2;\nloop invariant i26: (i1 > n) ==> x2 == x1 + i1;\nloop invariant i27: 0 <= i1 && i1 <= n+1;\nloop invariant i28: 0 <= i2 && i2 <= n+1;\nloop invariant i29: 0 <= x1 && x1 <= (n*(n+1))/2;\nloop invariant i30: 0 <= x2 && x2 <= (n*(n+1))/2;\nloop invariant i31: x2 == x1 + i1 || x2 == x1 + i1 - 1;\nloop invariant i32: 0 <= x1 && x1 <= n*(n+1)/2;\nloop invariant i33: 0 <= x2 && x2 <= n*(n+1)/2;\nloop invariant i34: x1 <= x2;\nloop invariant i35: (i1 <= n) ==> (x1 == x2 + i1 - i2);\nloop invariant i36: (i1 > n) ==> (x1 == x2 - i2 + i1);\nloop invariant i37: 0 <= x1;\nloop invariant i38: 0 <= x2;\nloop invariant i39: i1 <= i2;\nloop invariant i40: 0 <= i1 && i1 <= n + 1;\nloop invariant i41: 0 <= i2 && i2 <= n + 1;\nloop invariant i42: x2 == x1 + (i1 <= n ? i1 : 0);\nloop invariant i43: (i1 <= n) ==> (x1 == (i1-1)*i1/2);\nloop invariant i44: (i1 > n) ==> (x1 == n*(n+1)/2);\nloop invariant i45: (i2 <= n) ==> (x2 == i1*i2/2);\nloop invariant i46: (i2 > n) ==> (x2 == (n+1)*n/2);\n*/\nwhile (1)\n\t{\n    \tif ( i1 <= n) {\n\t        x1 = x1 + i1;\n    \t    i1++;\n\t    }\n\n\t\tif ( i2 <= n) {\n\t        x2 = x2 + i2;\n    \t    i2++;\n\t\t}\n\n\t\tif (i1>n && i2>n) break;\n\t\t{;//@ assert(x2==x1+i1);\n}\n    }\n}"
        ]
    },
    "stats": {
        "gen_success": [
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/05.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/07.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/19.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/37.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/39.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/gulv.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/gulv_simp.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/pldi082_unbounded.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/substring1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/xy10.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/const_safe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/multivar_safe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/phases_safe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/simple_safe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/simple_safe2.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/simple_safe3.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/simple_safe4.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/underapprox_safe2.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/underapprox_unsafe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/barbr.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/barbrprime.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/bk-nat.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/bkley.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/efm.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/ex1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/lifnat.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/lifnatprime.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/lifo.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/seesaw.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/substring1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/swim.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/swim1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/invgen/bind_expands_vars2.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/invgen/gulwani_cegar1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/invgen/gulwani_cegar2.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/invgen/ken-imp.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/invgen/NetBSD_g_Ctoc.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/invgen/NetBSD_loop.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/invgen/NetBSD_loop_int.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/invgen/rajamani_1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/invgen/sendmail-close-angle.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/invgen/sendmail-mime-fromqp.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/invgen/simple.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/invgen/simple_if.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/invgen/up-nested.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/svcomp/count_up_down_true.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/svcomp/for_infinite_loop_1_true.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/svcomp/for_infinite_loop_2_true.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/svcomp/sum03_true.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/svcomp/sum04_true.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/svcomp/terminator_02_true.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/svcomp/trex03_true.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/svcomp/while_infinite_loop_1_true.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/svcomp/while_infinite_loop_2_true.c",
            "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/invgen/split.c",
            "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c"
        ],
        "repair_success": [
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/svcomp/sum01_true.c"
        ],
        "repair_failure": [
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/35.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/f2.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/const_unsafe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/diamond_safe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/diamond_safe2.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/diamond_unsafe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/diamond_unsafe2.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/multivar_unsafe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/overflow_safe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/overflow_unsafe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/phases_unsafe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/simple_unsafe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/simple_unsafe2.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/simple_unsafe3.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/simple_unsafe4.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/underapprox_safe1.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/crafted/underapprox_unsafe2.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/cars.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/dagger/fig2.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/invgen/id_trans.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/invgen/MADWiFi-encode_ie_ok.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/invgen/split.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/svcomp/count_up_down_false.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/svcomp/for_bounded_loop1_false.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/svcomp/sum01_bug02_false.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/svcomp/sum01_bug02_sum01_bug02_base.case_false.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/svcomp/sum01_false.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/svcomp/sum03_false.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/svcomp/sum04_false.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/svcomp/terminator_02_false.c",
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/svcomp/trex03_false.c",
            "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/invgen/id_trans.c",
            "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/invgen/MADWiFi-encode_ie_ok.c"
        ],
        "gen_skipped": [],
        "repair_skipped": [
            "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/20.c"
        ],
        "total": 34,
        "gen_success_count": 59,
        "repair_success_count": 1,
        "repair_failure_count": 33,
        "gen_skipped_count": 0,
        "repair_skipped_count": 1
    }
}