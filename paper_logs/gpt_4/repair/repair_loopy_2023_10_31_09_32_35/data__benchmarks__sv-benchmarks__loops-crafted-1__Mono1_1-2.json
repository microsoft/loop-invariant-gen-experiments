{
    "logs": {
        "file": "../data/benchmarks/sv-benchmarks/loops-crafted-1/Mono1_1-2.c",
        "benchmark_code": "#define assume(e) if(!(e)) return 0;\n\nint main(void) {\n  unsigned int x = 0;\n\n  while (x < 100000000) {\n    if (x < 10000000) {\n      x++;\n    } else {\n      x += 2;\n    }\n  }\n\n  {;\n//@ assert(x == 100000000);\n}\n\n}",
        "success": true,
        "repair_tries": [],
        "candidates": [
            "#define assume(e) if(!(e)) return 0;\n\nint main(void) {\n  unsigned int x = 0;\n\n  /*@\nloop invariant i1: x >= 0;\nloop invariant i2: x <= 100000000;\nloop invariant i3: \\forall integer k; 0 <= k < LoopEntry -> \\at(x, LoopCurrent) >= \\at(x, k);\nloop invariant i4: 0 <= x;\nloop invariant i5: (x < 10000000) ==> (x % 2 == 0);\nloop invariant i6: (x >= 10000000) ==> (x % 2 == 1);\nloop invariant i7: x % 2 == 0 ==> x >= 10000000;\nloop invariant i8: x < 10000000 ==> x < 100000000;\nloop invariant i9: x >= 10000000 ==> x < 100000000 - 1;\nloop invariant i10: \\forall integer i; 0 <= i < \\old(x) ==> x != i;\nloop invariant i11: x >= \\at(x, LoopEntry) ==> (x - \\at(x, LoopEntry)) % 2 == 0;\n*/\nwhile (x < 100000000) {\n    if (x < 10000000) {\n      x++;\n    } else {\n      x += 2;\n    }\n  }\n\n  {;\n//@ assert(x == 100000000);\n}\n\n}",
            "#define assume(e) if(!(e)) return 0;\n\nint main(void) {\n  unsigned int x = 0;\n\n  /*@\nloop invariant i1: 0 <= x;\nloop invariant i2: x <= 100000000;\nloop invariant i3: x % 2 == 0 ==> x >= 10000000;\nloop invariant i4: 0 <= x <= 100000000;\nloop invariant i5: x < 10000000 ==> x == \\at(x - 1, LoopEntry);\nloop invariant i6: x >= 10000000 ==> x == \\at(x - 2, LoopEntry);\nloop invariant i7: x >= 10000000 ==> (x - 10000000) % 2 == 0;\nloop invariant i8: x >= 0;\nloop invariant i9: x < 10000000 ==> x < 100000000;\nloop invariant i10: x >= 10000000 ==> x < 100000000 - 1;\nloop invariant i11: x % 2 != 0 ==> x < 10000000;\nloop invariant i12: x % 2 == 1 ==> x < 10000000;\nloop invariant i13: (x < 10000000) ==> (x % 2 == 0);\nloop invariant i14: \\forall integer i; 0 <= i < \\old(x) ==> x != i;\n*/\nwhile (x < 100000000) {\n    if (x < 10000000) {\n      x++;\n    } else {\n      x += 2;\n    }\n  }\n\n  {;\n//@ assert(x == 100000000);\n}\n\n}"
        ]
    },
    "stats": {
        "gen_success": [
            "../data/benchmarks/sv-benchmarks/loops-crafted-1/Mono1_1-2.c"
        ],
        "repair_success": [],
        "repair_failure": [
            "../data/benchmarks/sv-benchmarks/loop-floats-scientific-comp/loop1-2.c"
        ],
        "gen_skipped": [],
        "repair_skipped": [],
        "total": 1,
        "gen_success_count": 0,
        "repair_success_count": 0,
        "repair_failure_count": 1,
        "gen_skipped_count": 0,
        "repair_skipped_count": 0
    }
}