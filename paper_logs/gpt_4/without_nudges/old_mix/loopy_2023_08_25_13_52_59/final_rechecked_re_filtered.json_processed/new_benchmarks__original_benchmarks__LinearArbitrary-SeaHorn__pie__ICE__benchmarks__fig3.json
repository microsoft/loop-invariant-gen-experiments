{
    "file": "../new_benchmarks/original_benchmarks/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
    "benchmark_code": "#define assume(e) if(!(e)) return 0;\nextern int unknown(void);\nextern int unknown_int(void);\n\nint main() {\n\n\tint y = unknown_int();\n\tint lock;\n\tlock = 0;\n\tint x = unknown_int();\n\tint input;\n\n\t{\n\t\tlock = 1;\n\t\tx = y;\n\t\tinput = unknown_int();\n\t\tif( input ) {\n\n\t\t\tlock = 0;\n\t\t\ty = y + 1;\n\t\t}\n\t}\n\n\twhile(x != y) {\n\n\t\tlock = 1;\n\t\tx = y;\n\t\tinput = unknown_int();\n\t\tif ( input ) {\n\n\t\t\tlock = 0;\n\t\t\ty = y + 1;\n\t\t}\n\t}\n\n\t{;//@ assert(lock == 1);\n}\n\n}\n",
    "pass_at_k": [
        0.2,
        0.3,
        0.4,
        0.4,
        0.5,
        0.6,
        0.7,
        0.7,
        0.8,
        0.8,
        0.9,
        0.9,
        0.9,
        1.0,
        1.0
    ],
    "pass_at_k_prune": [
        0.2,
        0.2,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
    ],
    "checking_exceptions": [],
    "pruning_exceptions": []
}