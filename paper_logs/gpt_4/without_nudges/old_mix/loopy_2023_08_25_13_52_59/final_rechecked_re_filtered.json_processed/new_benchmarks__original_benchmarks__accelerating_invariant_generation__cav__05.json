{
    "file": "../new_benchmarks/original_benchmarks/accelerating_invariant_generation/cav/05.c",
    "benchmark_code": "#define assume(e) if(!(e)) return;\nextern int unknown(void);\n\nint unknown1(){\n    int x; return x;\n}\n\nint unknown2();\nint unknown3();\nint unknown4();\n\nvoid main()\n{\n\tint flag = unknown1();\n\tint x = 0;\n\tint y = 0;\n\n\tint j = 0;\n\tint i = 0;\n\n\twhile(unknown1())\n\t{\n\t  x++;\n\t  y++;\n\t  i+=x;\n\t  j+=y;\n\t  if(flag)  j+=1;\n          j = j;\n\t} \n\tif(j <= i - 1)\n\t{\n\t  goto ERROR;\n          ERROR:{; //@ assert(\\false);\n};\n\t}\n\t\n}",
    "pass_at_k": [
        0.1,
        0.2,
        0.2,
        0.4,
        0.6,
        0.6,
        0.6,
        0.6,
        0.7,
        0.9,
        0.9,
        1.0,
        1.0,
        1.0,
        1.0
    ],
    "pass_at_k_prune": [
        0.1,
        0.2,
        0.2,
        0.4,
        0.7,
        0.7,
        0.8,
        0.8,
        0.9,
        0.9,
        0.9,
        1.0,
        1.0,
        1.0,
        1.0
    ],
    "checking_exceptions": [],
    "pruning_exceptions": []
}